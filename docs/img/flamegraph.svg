<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="565.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="127844"><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (19 samples, 0.01%)</title><rect x="0.0063%" y="437" width="0.0149%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="19"/><text x="0.2563%" y="447.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (18 samples, 0.01%)</title><rect x="0.0211%" y="437" width="0.0141%" height="15" fill="rgb(217,0,24)" fg:x="27" fg:w="18"/><text x="0.2711%" y="447.50"></text></g><g><title>dkn-compute`libp2p_swarm::Swarm&lt;TBehaviour&gt;::poll_next_event (55 samples, 0.04%)</title><rect x="0.0031%" y="453" width="0.0430%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="55"/><text x="0.2531%" y="463.50"></text></g><g><title>dkn-compute`dkn_compute::main::_{{closure}} (61 samples, 0.05%)</title><rect x="0.0000%" y="485" width="0.0477%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="61"/><text x="0.2500%" y="495.50"></text></g><g><title>dkn-compute`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (60 samples, 0.05%)</title><rect x="0.0008%" y="469" width="0.0469%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="60"/><text x="0.2508%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (17 samples, 0.01%)</title><rect x="0.0477%" y="453" width="0.0133%" height="15" fill="rgb(232,128,0)" fg:x="61" fg:w="17"/><text x="0.2977%" y="463.50"></text></g><g><title>dkn-compute`tokio::runtime::context::runtime::enter_runtime (80 samples, 0.06%)</title><rect x="0.0000%" y="517" width="0.0626%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="80"/><text x="0.2500%" y="527.50"></text></g><g><title>dkn-compute`tokio::runtime::park::CachedParkThread::block_on (80 samples, 0.06%)</title><rect x="0.0000%" y="501" width="0.0626%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="80"/><text x="0.2500%" y="511.50"></text></g><g><title>dkn-compute`tokio::runtime::park::Inner::park (19 samples, 0.01%)</title><rect x="0.0477%" y="485" width="0.0149%" height="15" fill="rgb(218,30,26)" fg:x="61" fg:w="19"/><text x="0.2977%" y="495.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::wait_until_internal (19 samples, 0.01%)</title><rect x="0.0477%" y="469" width="0.0149%" height="15" fill="rgb(220,122,19)" fg:x="61" fg:w="19"/><text x="0.2977%" y="479.50"></text></g><g><title>dkn-compute`tokio::sync::notify::Notified::poll_notified (15 samples, 0.01%)</title><rect x="0.1455%" y="325" width="0.0117%" height="15" fill="rgb(250,228,42)" fg:x="186" fg:w="15"/><text x="0.3955%" y="335.50"></text></g><g><title>dkn-compute`tokio_util::sync::cancellation_token::tree_node::is_cancelled (19 samples, 0.01%)</title><rect x="0.1572%" y="325" width="0.0149%" height="15" fill="rgb(240,193,28)" fg:x="201" fg:w="19"/><text x="0.4072%" y="335.50"></text></g><g><title>dkn-compute`&lt;tokio_util::sync::cancellation_token::WaitForCancellationFuture as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="0.1439%" y="341" width="0.0289%" height="15" fill="rgb(216,20,37)" fg:x="184" fg:w="37"/><text x="0.3939%" y="351.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (43 samples, 0.03%)</title><rect x="0.2879%" y="277" width="0.0336%" height="15" fill="rgb(206,188,39)" fg:x="368" fg:w="43"/><text x="0.5379%" y="287.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::poll (62 samples, 0.05%)</title><rect x="0.2847%" y="293" width="0.0485%" height="15" fill="rgb(217,207,13)" fg:x="364" fg:w="62"/><text x="0.5347%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::poll (26 samples, 0.02%)</title><rect x="0.3332%" y="293" width="0.0203%" height="15" fill="rgb(231,73,38)" fg:x="426" fg:w="26"/><text x="0.5832%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::transport::Transport as libp2p_core::transport::Transport&gt;::poll (16 samples, 0.01%)</title><rect x="0.3410%" y="277" width="0.0125%" height="15" fill="rgb(225,20,46)" fg:x="436" fg:w="16"/><text x="0.5910%" y="287.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="0.3426%" y="261" width="0.0110%" height="15" fill="rgb(210,31,41)" fg:x="438" fg:w="14"/><text x="0.5926%" y="271.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="0.3426%" y="245" width="0.0110%" height="15" fill="rgb(221,200,47)" fg:x="438" fg:w="14"/><text x="0.5926%" y="255.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::poll (95 samples, 0.07%)</title><rect x="0.2824%" y="309" width="0.0743%" height="15" fill="rgb(226,26,5)" fg:x="361" fg:w="95"/><text x="0.5324%" y="319.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::poll (102 samples, 0.08%)</title><rect x="0.2792%" y="325" width="0.0798%" height="15" fill="rgb(249,33,26)" fg:x="357" fg:w="102"/><text x="0.5292%" y="335.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.02%)</title><rect x="0.3653%" y="293" width="0.0188%" height="15" fill="rgb(235,183,28)" fg:x="467" fg:w="24"/><text x="0.6153%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="0.3731%" y="277" width="0.0110%" height="15" fill="rgb(221,5,38)" fg:x="477" fg:w="14"/><text x="0.6231%" y="287.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (32 samples, 0.03%)</title><rect x="0.3645%" y="325" width="0.0250%" height="15" fill="rgb(247,18,42)" fg:x="466" fg:w="32"/><text x="0.6145%" y="335.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (31 samples, 0.02%)</title><rect x="0.3653%" y="309" width="0.0242%" height="15" fill="rgb(241,131,45)" fg:x="467" fg:w="31"/><text x="0.6153%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_request_response::Behaviour&lt;TCodec&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (43 samples, 0.03%)</title><rect x="0.4216%" y="293" width="0.0336%" height="15" fill="rgb(249,31,29)" fg:x="539" fg:w="43"/><text x="0.6716%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_autonat::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (93 samples, 0.07%)</title><rect x="0.4083%" y="309" width="0.0727%" height="15" fill="rgb(225,111,53)" fg:x="522" fg:w="93"/><text x="0.6583%" y="319.50"></text></g><g><title>dkn-compute`&lt;futures_timer::native::delay::Delay as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="0.5100%" y="277" width="0.0110%" height="15" fill="rgb(238,160,17)" fg:x="652" fg:w="14"/><text x="0.7600%" y="287.50"></text></g><g><title>dkn-compute`&lt;futures_ticker::Ticker as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.01%)</title><rect x="0.5100%" y="293" width="0.0125%" height="15" fill="rgb(214,148,48)" fg:x="652" fg:w="16"/><text x="0.7600%" y="303.50"></text></g><g><title>dkn-compute`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 0.03%)</title><rect x="0.5436%" y="245" width="0.0313%" height="15" fill="rgb(232,36,49)" fg:x="695" fg:w="40"/><text x="0.7936%" y="255.50"></text></g><g><title>dkn-compute`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (70 samples, 0.05%)</title><rect x="0.5405%" y="261" width="0.0548%" height="15" fill="rgb(209,103,24)" fg:x="691" fg:w="70"/><text x="0.7905%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (21 samples, 0.02%)</title><rect x="0.5788%" y="245" width="0.0164%" height="15" fill="rgb(229,88,8)" fg:x="740" fg:w="21"/><text x="0.8288%" y="255.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::get_gossip_message_ids (71 samples, 0.06%)</title><rect x="0.5405%" y="277" width="0.0555%" height="15" fill="rgb(213,181,19)" fg:x="691" fg:w="71"/><text x="0.7905%" y="287.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::shift (44 samples, 0.03%)</title><rect x="0.5960%" y="277" width="0.0344%" height="15" fill="rgb(254,191,54)" fg:x="762" fg:w="44"/><text x="0.8460%" y="287.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::heartbeat (143 samples, 0.11%)</title><rect x="0.5327%" y="293" width="0.1119%" height="15" fill="rgb(241,83,37)" fg:x="681" fg:w="143"/><text x="0.7827%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (232 samples, 0.18%)</title><rect x="0.4811%" y="309" width="0.1815%" height="15" fill="rgb(233,36,39)" fg:x="615" fg:w="232"/><text x="0.7311%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_identify::behaviour::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (46 samples, 0.04%)</title><rect x="0.6625%" y="309" width="0.0360%" height="15" fill="rgb(226,3,54)" fg:x="847" fg:w="46"/><text x="0.9125%" y="319.50"></text></g><g><title>dkn-compute`libp2p_kad::jobs::PutRecordJob::poll (17 samples, 0.01%)</title><rect x="0.7619%" y="293" width="0.0133%" height="15" fill="rgb(245,192,40)" fg:x="974" fg:w="17"/><text x="1.0119%" y="303.50"></text></g><g><title>dkn-compute`&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.04%)</title><rect x="0.8049%" y="277" width="0.0415%" height="15" fill="rgb(238,167,29)" fg:x="1029" fg:w="53"/><text x="1.0549%" y="287.50"></text></g><g><title>dkn-compute`libp2p_kad::query::peers::closest::ClosestPeersIter::next (504 samples, 0.39%)</title><rect x="0.8549%" y="277" width="0.3942%" height="15" fill="rgb(232,182,51)" fg:x="1093" fg:w="504"/><text x="1.1049%" y="287.50"></text></g><g><title>dkn-compute`&lt;alloc::collections::btree::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (288 samples, 0.23%)</title><rect x="1.0239%" y="261" width="0.2253%" height="15" fill="rgb(231,60,39)" fg:x="1309" fg:w="288"/><text x="1.2739%" y="271.50"></text></g><g><title>dkn-compute`libp2p_kad::query::QueryPool&lt;TInner&gt;::poll (610 samples, 0.48%)</title><rect x="0.7752%" y="293" width="0.4771%" height="15" fill="rgb(208,69,12)" fg:x="991" fg:w="610"/><text x="1.0252%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (24 samples, 0.02%)</title><rect x="1.2672%" y="261" width="0.0188%" height="15" fill="rgb(235,93,37)" fg:x="1620" fg:w="24"/><text x="1.5172%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (41 samples, 0.03%)</title><rect x="1.2578%" y="277" width="0.0321%" height="15" fill="rgb(213,116,39)" fg:x="1608" fg:w="41"/><text x="1.5078%" y="287.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (45 samples, 0.04%)</title><rect x="1.2562%" y="293" width="0.0352%" height="15" fill="rgb(222,207,29)" fg:x="1606" fg:w="45"/><text x="1.5062%" y="303.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (19 samples, 0.01%)</title><rect x="1.2930%" y="293" width="0.0149%" height="15" fill="rgb(206,96,30)" fg:x="1653" fg:w="19"/><text x="1.5430%" y="303.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (15 samples, 0.01%)</title><rect x="1.3078%" y="293" width="0.0117%" height="15" fill="rgb(218,138,4)" fg:x="1672" fg:w="15"/><text x="1.5578%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::behaviour::Behaviour&lt;TStore&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (803 samples, 0.63%)</title><rect x="0.6985%" y="309" width="0.6281%" height="15" fill="rgb(250,191,14)" fg:x="893" fg:w="803"/><text x="0.9485%" y="319.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (38 samples, 0.03%)</title><rect x="1.3415%" y="277" width="0.0297%" height="15" fill="rgb(239,60,40)" fg:x="1715" fg:w="38"/><text x="1.5915%" y="287.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (13 samples, 0.01%)</title><rect x="1.3610%" y="261" width="0.0102%" height="15" fill="rgb(206,27,48)" fg:x="1740" fg:w="13"/><text x="1.6110%" y="271.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.04%)</title><rect x="1.3407%" y="293" width="0.0368%" height="15" fill="rgb(225,35,8)" fg:x="1714" fg:w="47"/><text x="1.5907%" y="303.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (20 samples, 0.02%)</title><rect x="1.3970%" y="293" width="0.0156%" height="15" fill="rgb(250,213,24)" fg:x="1786" fg:w="20"/><text x="1.6470%" y="303.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (37 samples, 0.03%)</title><rect x="1.4127%" y="293" width="0.0289%" height="15" fill="rgb(247,123,22)" fg:x="1806" fg:w="37"/><text x="1.6627%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::Behaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (151 samples, 0.12%)</title><rect x="1.3266%" y="309" width="0.1181%" height="15" fill="rgb(231,138,38)" fg:x="1696" fg:w="151"/><text x="1.5766%" y="319.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (15 samples, 0.01%)</title><rect x="1.4799%" y="309" width="0.0117%" height="15" fill="rgb(231,145,46)" fg:x="1892" fg:w="15"/><text x="1.7299%" y="319.50"></text></g><g><title>dkn-compute`&lt;dkn_compute::p2p::behaviour::DriaBehaviour as libp2p_swarm::behaviour::NetworkBehaviour&gt;::poll (1,410 samples, 1.10%)</title><rect x="0.3966%" y="325" width="1.1029%" height="15" fill="rgb(251,118,11)" fg:x="507" fg:w="1410"/><text x="0.6466%" y="335.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (132 samples, 0.10%)</title><rect x="1.5636%" y="309" width="0.1033%" height="15" fill="rgb(217,147,25)" fg:x="1999" fg:w="132"/><text x="1.8136%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::transform::IdentityTransform as libp2p_gossipsub::transform::DataTransform&gt;::inbound_transform (20 samples, 0.02%)</title><rect x="1.6669%" y="309" width="0.0156%" height="15" fill="rgb(247,81,37)" fg:x="2131" fg:w="20"/><text x="1.9169%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="1.7201%" y="293" width="0.0117%" height="15" fill="rgb(209,12,38)" fg:x="2199" fg:w="15"/><text x="1.9701%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (60 samples, 0.05%)</title><rect x="1.7318%" y="293" width="0.0469%" height="15" fill="rgb(227,1,9)" fg:x="2214" fg:w="60"/><text x="1.9818%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.04%)</title><rect x="1.7404%" y="277" width="0.0383%" height="15" fill="rgb(248,47,43)" fg:x="2225" fg:w="49"/><text x="1.9904%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (40 samples, 0.03%)</title><rect x="1.7474%" y="261" width="0.0313%" height="15" fill="rgb(221,10,30)" fg:x="2234" fg:w="40"/><text x="1.9974%" y="271.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::types::RawMessage as core::clone::Clone&gt;::clone (130 samples, 0.10%)</title><rect x="1.6825%" y="309" width="0.1017%" height="15" fill="rgb(210,229,1)" fg:x="2151" fg:w="130"/><text x="1.9325%" y="319.50"></text></g><g><title>dkn-compute`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.01%)</title><rect x="1.8163%" y="277" width="0.0110%" height="15" fill="rgb(222,148,37)" fg:x="2322" fg:w="14"/><text x="2.0663%" y="287.50"></text></g><g><title>dkn-compute`dkn_compute::p2p::behaviour::create_gossipsub_behavior::_{{closure}} (45 samples, 0.04%)</title><rect x="1.7983%" y="309" width="0.0352%" height="15" fill="rgb(234,67,33)" fg:x="2299" fg:w="45"/><text x="2.0483%" y="319.50"></text></g><g><title>dkn-compute`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (41 samples, 0.03%)</title><rect x="1.8014%" y="293" width="0.0321%" height="15" fill="rgb(247,98,35)" fg:x="2303" fg:w="41"/><text x="2.0514%" y="303.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="1.9008%" y="293" width="0.0117%" height="15" fill="rgb(247,138,52)" fg:x="2430" fg:w="15"/><text x="2.1508%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (13 samples, 0.01%)</title><rect x="1.9258%" y="277" width="0.0102%" height="15" fill="rgb(213,79,30)" fg:x="2462" fg:w="13"/><text x="2.1758%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="1.9399%" y="277" width="0.0141%" height="15" fill="rgb(246,177,23)" fg:x="2480" fg:w="18"/><text x="2.1899%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.01%)</title><rect x="1.9399%" y="261" width="0.0141%" height="15" fill="rgb(230,62,27)" fg:x="2480" fg:w="18"/><text x="2.1899%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.01%)</title><rect x="1.9406%" y="245" width="0.0133%" height="15" fill="rgb(216,154,8)" fg:x="2481" fg:w="17"/><text x="2.1906%" y="255.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::types::RawMessage as core::clone::Clone&gt;::clone (55 samples, 0.04%)</title><rect x="1.9125%" y="293" width="0.0430%" height="15" fill="rgb(244,35,45)" fg:x="2445" fg:w="55"/><text x="2.1625%" y="303.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="1.9672%" y="277" width="0.0102%" height="15" fill="rgb(251,115,12)" fg:x="2515" fg:w="13"/><text x="2.2172%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.01%)</title><rect x="1.9993%" y="261" width="0.0110%" height="15" fill="rgb(240,54,50)" fg:x="2556" fg:w="14"/><text x="2.2493%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.01%)</title><rect x="2.0001%" y="245" width="0.0102%" height="15" fill="rgb(233,84,52)" fg:x="2557" fg:w="13"/><text x="2.2501%" y="255.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (41 samples, 0.03%)</title><rect x="1.9790%" y="277" width="0.0321%" height="15" fill="rgb(207,117,47)" fg:x="2530" fg:w="41"/><text x="2.2290%" y="287.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (63 samples, 0.05%)</title><rect x="1.9641%" y="293" width="0.0493%" height="15" fill="rgb(249,43,39)" fg:x="2511" fg:w="63"/><text x="2.2141%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.01%)</title><rect x="2.0376%" y="293" width="0.0133%" height="15" fill="rgb(209,38,44)" fg:x="2605" fg:w="17"/><text x="2.2876%" y="303.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::behaviour::Behaviour&lt;D,F&gt;::forward_msg (265 samples, 0.21%)</title><rect x="1.8452%" y="309" width="0.2073%" height="15" fill="rgb(236,212,23)" fg:x="2359" fg:w="265"/><text x="2.0952%" y="319.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (49 samples, 0.04%)</title><rect x="2.0572%" y="293" width="0.0383%" height="15" fill="rgb(242,79,21)" fg:x="2630" fg:w="49"/><text x="2.3072%" y="303.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::observe_duplicate (162 samples, 0.13%)</title><rect x="2.0533%" y="309" width="0.1267%" height="15" fill="rgb(211,96,35)" fg:x="2625" fg:w="162"/><text x="2.3033%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (108 samples, 0.08%)</title><rect x="2.0955%" y="293" width="0.0845%" height="15" fill="rgb(253,215,40)" fg:x="2679" fg:w="108"/><text x="2.3455%" y="303.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (27 samples, 0.02%)</title><rect x="2.1886%" y="293" width="0.0211%" height="15" fill="rgb(211,81,21)" fg:x="2798" fg:w="27"/><text x="2.4386%" y="303.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::mcache::MessageCache::put (41 samples, 0.03%)</title><rect x="2.1800%" y="309" width="0.0321%" height="15" fill="rgb(208,190,38)" fg:x="2787" fg:w="41"/><text x="2.4300%" y="319.50"></text></g><g><title>dkn-compute`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (64 samples, 0.05%)</title><rect x="2.2215%" y="293" width="0.0501%" height="15" fill="rgb(235,213,38)" fg:x="2840" fg:w="64"/><text x="2.4715%" y="303.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (20 samples, 0.02%)</title><rect x="2.2715%" y="293" width="0.0156%" height="15" fill="rgb(237,122,38)" fg:x="2904" fg:w="20"/><text x="2.5215%" y="303.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (20 samples, 0.02%)</title><rect x="2.2715%" y="277" width="0.0156%" height="15" fill="rgb(244,218,35)" fg:x="2904" fg:w="20"/><text x="2.5215%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (29 samples, 0.02%)</title><rect x="2.2903%" y="293" width="0.0227%" height="15" fill="rgb(240,68,47)" fg:x="2928" fg:w="29"/><text x="2.5403%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.01%)</title><rect x="2.3138%" y="293" width="0.0110%" height="15" fill="rgb(210,16,53)" fg:x="2958" fg:w="14"/><text x="2.5638%" y="303.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::time_cache::DuplicateCache&lt;Key&gt;::insert (145 samples, 0.11%)</title><rect x="2.2121%" y="309" width="0.1134%" height="15" fill="rgb(235,124,12)" fg:x="2828" fg:w="145"/><text x="2.4621%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (32 samples, 0.03%)</title><rect x="2.3341%" y="309" width="0.0250%" height="15" fill="rgb(224,169,11)" fg:x="2984" fg:w="32"/><text x="2.5841%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.02%)</title><rect x="2.4459%" y="277" width="0.0156%" height="15" fill="rgb(250,166,2)" fg:x="3127" fg:w="20"/><text x="2.6959%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (121 samples, 0.09%)</title><rect x="2.3724%" y="309" width="0.0946%" height="15" fill="rgb(242,216,29)" fg:x="3033" fg:w="121"/><text x="2.6224%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (106 samples, 0.08%)</title><rect x="2.3842%" y="293" width="0.0829%" height="15" fill="rgb(230,116,27)" fg:x="3048" fg:w="106"/><text x="2.6342%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.02%)</title><rect x="2.4694%" y="309" width="0.0156%" height="15" fill="rgb(228,99,48)" fg:x="3157" fg:w="20"/><text x="2.7194%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (28 samples, 0.02%)</title><rect x="2.4913%" y="309" width="0.0219%" height="15" fill="rgb(253,11,6)" fg:x="3185" fg:w="28"/><text x="2.7413%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (33 samples, 0.03%)</title><rect x="2.5132%" y="309" width="0.0258%" height="15" fill="rgb(247,143,39)" fg:x="3213" fg:w="33"/><text x="2.7632%" y="319.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::behaviour::Behaviour&lt;C,F&gt; as libp2p_swarm::behaviour::NetworkBehaviour&gt;::on_connection_handler_event (1,333 samples, 1.04%)</title><rect x="1.5065%" y="325" width="1.0427%" height="15" fill="rgb(236,97,10)" fg:x="1926" fg:w="1333"/><text x="1.7565%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.01%)</title><rect x="2.5390%" y="309" width="0.0102%" height="15" fill="rgb(233,208,19)" fg:x="3246" fg:w="13"/><text x="2.7890%" y="319.50"></text></g><g><title>dkn-compute`libp2p_tcp::Transport&lt;T&gt;::create_socket (20 samples, 0.02%)</title><rect x="2.5734%" y="213" width="0.0156%" height="15" fill="rgb(216,164,2)" fg:x="3290" fg:w="20"/><text x="2.8234%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`socket (14 samples, 0.01%)</title><rect x="2.5781%" y="197" width="0.0110%" height="15" fill="rgb(220,129,5)" fg:x="3296" fg:w="14"/><text x="2.8281%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::dial (31 samples, 0.02%)</title><rect x="2.5719%" y="261" width="0.0242%" height="15" fill="rgb(242,17,10)" fg:x="3288" fg:w="31"/><text x="2.8219%" y="271.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::Map&lt;T,F&gt; as libp2p_core::transport::Transport&gt;::dial (31 samples, 0.02%)</title><rect x="2.5719%" y="245" width="0.0242%" height="15" fill="rgb(242,107,0)" fg:x="3288" fg:w="31"/><text x="2.8219%" y="255.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::dial (29 samples, 0.02%)</title><rect x="2.5734%" y="229" width="0.0227%" height="15" fill="rgb(251,28,31)" fg:x="3290" fg:w="29"/><text x="2.8234%" y="239.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::choice::OrTransport&lt;A,B&gt; as libp2p_core::transport::Transport&gt;::dial (35 samples, 0.03%)</title><rect x="2.5695%" y="277" width="0.0274%" height="15" fill="rgb(233,223,10)" fg:x="3285" fg:w="35"/><text x="2.8195%" y="287.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_core::transport::boxed::Abstract&lt;O&gt;&gt;::dial (38 samples, 0.03%)</title><rect x="2.5695%" y="293" width="0.0297%" height="15" fill="rgb(215,21,27)" fg:x="3285" fg:w="38"/><text x="2.8195%" y="303.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 0.03%)</title><rect x="2.5695%" y="309" width="0.0313%" height="15" fill="rgb(232,23,21)" fg:x="3285" fg:w="40"/><text x="2.8195%" y="319.50"></text></g><g><title>dkn-compute`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (42 samples, 0.03%)</title><rect x="2.5688%" y="325" width="0.0329%" height="15" fill="rgb(244,5,23)" fg:x="3284" fg:w="42"/><text x="2.8188%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (46 samples, 0.04%)</title><rect x="2.6251%" y="245" width="0.0360%" height="15" fill="rgb(226,81,46)" fg:x="3356" fg:w="46"/><text x="2.8751%" y="255.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (57 samples, 0.04%)</title><rect x="2.6204%" y="261" width="0.0446%" height="15" fill="rgb(247,70,30)" fg:x="3350" fg:w="57"/><text x="2.8704%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (27 samples, 0.02%)</title><rect x="2.6650%" y="261" width="0.0211%" height="15" fill="rgb(212,68,19)" fg:x="3407" fg:w="27"/><text x="2.9150%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (27 samples, 0.02%)</title><rect x="2.6650%" y="245" width="0.0211%" height="15" fill="rgb(240,187,13)" fg:x="3407" fg:w="27"/><text x="2.9150%" y="255.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (97 samples, 0.08%)</title><rect x="2.6157%" y="277" width="0.0759%" height="15" fill="rgb(223,113,26)" fg:x="3344" fg:w="97"/><text x="2.8657%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (102 samples, 0.08%)</title><rect x="2.6149%" y="293" width="0.0798%" height="15" fill="rgb(206,192,2)" fg:x="3343" fg:w="102"/><text x="2.8649%" y="303.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Sender&lt;T&gt;::try_send (112 samples, 0.09%)</title><rect x="2.6102%" y="325" width="0.0876%" height="15" fill="rgb(241,108,4)" fg:x="3337" fg:w="112"/><text x="2.8602%" y="335.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (108 samples, 0.08%)</title><rect x="2.6133%" y="309" width="0.0845%" height="15" fill="rgb(247,173,49)" fg:x="3341" fg:w="108"/><text x="2.8633%" y="319.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (13 samples, 0.01%)</title><rect x="2.6978%" y="325" width="0.0102%" height="15" fill="rgb(224,114,35)" fg:x="3449" fg:w="13"/><text x="2.9478%" y="335.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::iter_established_connections_of_peer (22 samples, 0.02%)</title><rect x="2.7260%" y="325" width="0.0172%" height="15" fill="rgb(245,159,27)" fg:x="3485" fg:w="22"/><text x="2.9760%" y="335.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="2.7627%" y="309" width="0.0110%" height="15" fill="rgb(245,172,44)" fg:x="3532" fg:w="14"/><text x="3.0127%" y="319.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="2.7737%" y="309" width="0.0102%" height="15" fill="rgb(236,23,11)" fg:x="3546" fg:w="13"/><text x="3.0237%" y="319.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (27 samples, 0.02%)</title><rect x="2.8206%" y="277" width="0.0211%" height="15" fill="rgb(205,117,38)" fg:x="3606" fg:w="27"/><text x="3.0706%" y="287.50"></text></g><g><title>dkn-compute`futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (15 samples, 0.01%)</title><rect x="2.8417%" y="277" width="0.0117%" height="15" fill="rgb(237,72,25)" fg:x="3633" fg:w="15"/><text x="3.0917%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="2.9567%" y="197" width="0.0141%" height="15" fill="rgb(244,70,9)" fg:x="3780" fg:w="18"/><text x="3.2067%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (71 samples, 0.06%)</title><rect x="2.9215%" y="229" width="0.0555%" height="15" fill="rgb(217,125,39)" fg:x="3735" fg:w="71"/><text x="3.1715%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.04%)</title><rect x="2.9387%" y="213" width="0.0383%" height="15" fill="rgb(235,36,10)" fg:x="3757" fg:w="49"/><text x="3.1887%" y="223.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (131 samples, 0.10%)</title><rect x="2.8816%" y="245" width="0.1025%" height="15" fill="rgb(251,123,47)" fg:x="3684" fg:w="131"/><text x="3.1316%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.02%)</title><rect x="2.9904%" y="245" width="0.0227%" height="15" fill="rgb(221,13,13)" fg:x="3823" fg:w="29"/><text x="3.2404%" y="255.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (234 samples, 0.18%)</title><rect x="2.8574%" y="261" width="0.1830%" height="15" fill="rgb(238,131,9)" fg:x="3653" fg:w="234"/><text x="3.1074%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.02%)</title><rect x="3.0162%" y="245" width="0.0242%" height="15" fill="rgb(211,50,8)" fg:x="3856" fg:w="31"/><text x="3.2662%" y="255.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (266 samples, 0.21%)</title><rect x="2.8535%" y="277" width="0.2081%" height="15" fill="rgb(245,182,24)" fg:x="3648" fg:w="266"/><text x="3.1035%" y="287.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (371 samples, 0.29%)</title><rect x="2.7862%" y="293" width="0.2902%" height="15" fill="rgb(242,14,37)" fg:x="3562" fg:w="371"/><text x="3.0362%" y="303.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (422 samples, 0.33%)</title><rect x="2.7839%" y="309" width="0.3301%" height="15" fill="rgb(246,228,12)" fg:x="3559" fg:w="422"/><text x="3.0339%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.02%)</title><rect x="3.0936%" y="293" width="0.0203%" height="15" fill="rgb(213,55,15)" fg:x="3955" fg:w="26"/><text x="3.3436%" y="303.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (13 samples, 0.01%)</title><rect x="3.1351%" y="309" width="0.0102%" height="15" fill="rgb(209,9,3)" fg:x="4008" fg:w="13"/><text x="3.3851%" y="319.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::pool::Pool&lt;THandler&gt;::poll (526 samples, 0.41%)</title><rect x="2.7432%" y="325" width="0.4114%" height="15" fill="rgb(230,59,30)" fg:x="3507" fg:w="526"/><text x="2.9932%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.01%)</title><rect x="3.1828%" y="325" width="0.0125%" height="15" fill="rgb(209,121,21)" fg:x="4069" fg:w="16"/><text x="3.4328%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.02%)</title><rect x="3.1953%" y="325" width="0.0164%" height="15" fill="rgb(220,109,13)" fg:x="4085" fg:w="21"/><text x="3.4453%" y="335.50"></text></g><g><title>dkn-compute`libp2p_swarm::Swarm&lt;TBehaviour&gt;::poll_next_event (3,899 samples, 3.05%)</title><rect x="0.1752%" y="341" width="3.0498%" height="15" fill="rgb(232,18,1)" fg:x="224" fg:w="3899"/><text x="0.4252%" y="351.50">dkn..</text></g><g><title>dkn-compute`tokio::signal::make_future::_{{closure}} (19 samples, 0.01%)</title><rect x="3.2360%" y="309" width="0.0149%" height="15" fill="rgb(215,41,42)" fg:x="4137" fg:w="19"/><text x="3.4860%" y="319.50"></text></g><g><title>dkn-compute`tokio::signal::RxFuture::poll_recv (23 samples, 0.02%)</title><rect x="3.2360%" y="325" width="0.0180%" height="15" fill="rgb(224,123,36)" fg:x="4137" fg:w="23"/><text x="3.4860%" y="335.50"></text></g><g><title>dkn-compute`tokio::signal::unix::Signal::recv::_{{closure}} (31 samples, 0.02%)</title><rect x="3.2328%" y="341" width="0.0242%" height="15" fill="rgb(240,125,3)" fg:x="4133" fg:w="31"/><text x="3.4828%" y="351.50"></text></g><g><title>dkn-compute`&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,080 samples, 3.19%)</title><rect x="0.0978%" y="357" width="3.1914%" height="15" fill="rgb(205,98,50)" fg:x="125" fg:w="4080"/><text x="0.3478%" y="367.50">dkn..</text></g><g><title>dkn-compute`dkn_compute::main::_{{closure}} (4,145 samples, 3.24%)</title><rect x="0.0813%" y="373" width="3.2422%" height="15" fill="rgb(205,185,37)" fg:x="104" fg:w="4145"/><text x="0.3313%" y="383.50">dkn..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,083 samples, 0.85%)</title><rect x="3.3869%" y="341" width="0.8471%" height="15" fill="rgb(238,207,15)" fg:x="4330" fg:w="1083"/><text x="3.6369%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (50 samples, 0.04%)</title><rect x="4.2544%" y="309" width="0.0391%" height="15" fill="rgb(213,199,42)" fg:x="5439" fg:w="50"/><text x="4.5044%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (53 samples, 0.04%)</title><rect x="4.2544%" y="325" width="0.0415%" height="15" fill="rgb(235,201,11)" fg:x="5439" fg:w="53"/><text x="4.5044%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (89 samples, 0.07%)</title><rect x="4.2364%" y="341" width="0.0696%" height="15" fill="rgb(207,46,11)" fg:x="5416" fg:w="89"/><text x="4.4864%" y="351.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::wait_until_internal (1,224 samples, 0.96%)</title><rect x="3.3572%" y="357" width="0.9574%" height="15" fill="rgb(241,35,35)" fg:x="4292" fg:w="1224"/><text x="3.6072%" y="367.50"></text></g><g><title>dkn-compute`tokio::runtime::park::Inner::park (1,268 samples, 0.99%)</title><rect x="3.3251%" y="373" width="0.9918%" height="15" fill="rgb(243,32,47)" fg:x="4251" fg:w="1268"/><text x="3.5751%" y="383.50"></text></g><g><title>dkn-compute`tokio::runtime::park::CachedParkThread::block_on (5,436 samples, 4.25%)</title><rect x="0.0681%" y="389" width="4.2521%" height="15" fill="rgb(247,202,23)" fg:x="87" fg:w="5436"/><text x="0.3181%" y="399.50">dkn-c..</text></g><g><title>dyld`start (5,451 samples, 4.26%)</title><rect x="0.0626%" y="517" width="4.2638%" height="15" fill="rgb(219,102,11)" fg:x="80" fg:w="5451"/><text x="0.3126%" y="527.50">dyld`..</text></g><g><title>dkn-compute`main (5,451 samples, 4.26%)</title><rect x="0.0626%" y="501" width="4.2638%" height="15" fill="rgb(243,110,44)" fg:x="80" fg:w="5451"/><text x="0.3126%" y="511.50">dkn-c..</text></g><g><title>dkn-compute`std::rt::lang_start_internal (5,451 samples, 4.26%)</title><rect x="0.0626%" y="485" width="4.2638%" height="15" fill="rgb(222,74,54)" fg:x="80" fg:w="5451"/><text x="0.3126%" y="495.50">dkn-c..</text></g><g><title>dkn-compute`std::rt::lang_start::_{{closure}} (5,451 samples, 4.26%)</title><rect x="0.0626%" y="469" width="4.2638%" height="15" fill="rgb(216,99,12)" fg:x="80" fg:w="5451"/><text x="0.3126%" y="479.50">dkn-c..</text></g><g><title>dkn-compute`std::sys_common::backtrace::__rust_begin_short_backtrace (5,451 samples, 4.26%)</title><rect x="0.0626%" y="453" width="4.2638%" height="15" fill="rgb(226,22,26)" fg:x="80" fg:w="5451"/><text x="0.3126%" y="463.50">dkn-c..</text></g><g><title>dkn-compute`dkn_compute::main (5,451 samples, 4.26%)</title><rect x="0.0626%" y="437" width="4.2638%" height="15" fill="rgb(217,163,10)" fg:x="80" fg:w="5451"/><text x="0.3126%" y="447.50">dkn-c..</text></g><g><title>dkn-compute`tokio::runtime::runtime::Runtime::block_on (5,450 samples, 4.26%)</title><rect x="0.0634%" y="421" width="4.2630%" height="15" fill="rgb(213,25,53)" fg:x="81" fg:w="5450"/><text x="0.3134%" y="431.50">dkn-c..</text></g><g><title>dkn-compute`tokio::runtime::context::runtime::enter_runtime (5,450 samples, 4.26%)</title><rect x="0.0634%" y="405" width="4.2630%" height="15" fill="rgb(252,105,26)" fg:x="81" fg:w="5450"/><text x="0.3134%" y="415.50">dkn-c..</text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (28 samples, 0.02%)</title><rect x="4.3342%" y="405" width="0.0219%" height="15" fill="rgb(220,39,43)" fg:x="5541" fg:w="28"/><text x="4.5842%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (26 samples, 0.02%)</title><rect x="4.3358%" y="389" width="0.0203%" height="15" fill="rgb(229,68,48)" fg:x="5543" fg:w="26"/><text x="4.5858%" y="399.50"></text></g><g><title>dkn-compute`futures_timer::native::global::run (39 samples, 0.03%)</title><rect x="4.3271%" y="437" width="0.0305%" height="15" fill="rgb(252,8,32)" fg:x="5532" fg:w="39"/><text x="4.5771%" y="447.50"></text></g><g><title>dkn-compute`std::thread::park_timeout (30 samples, 0.02%)</title><rect x="4.3342%" y="421" width="0.0235%" height="15" fill="rgb(223,20,43)" fg:x="5541" fg:w="30"/><text x="4.5842%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (39 samples, 0.03%)</title><rect x="4.4625%" y="293" width="0.0305%" height="15" fill="rgb(229,81,49)" fg:x="5705" fg:w="39"/><text x="4.7125%" y="303.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (55 samples, 0.04%)</title><rect x="4.4531%" y="309" width="0.0430%" height="15" fill="rgb(236,28,36)" fg:x="5693" fg:w="55"/><text x="4.7031%" y="319.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (57 samples, 0.04%)</title><rect x="4.4523%" y="325" width="0.0446%" height="15" fill="rgb(249,185,26)" fg:x="5692" fg:w="57"/><text x="4.7023%" y="335.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (29 samples, 0.02%)</title><rect x="4.5125%" y="325" width="0.0227%" height="15" fill="rgb(249,174,33)" fg:x="5769" fg:w="29"/><text x="4.7625%" y="335.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (15 samples, 0.01%)</title><rect x="4.5563%" y="309" width="0.0117%" height="15" fill="rgb(233,201,37)" fg:x="5825" fg:w="15"/><text x="4.8063%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13 samples, 0.01%)</title><rect x="4.5579%" y="293" width="0.0102%" height="15" fill="rgb(221,78,26)" fg:x="5827" fg:w="13"/><text x="4.8079%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (883 samples, 0.69%)</title><rect x="4.6166%" y="277" width="0.6907%" height="15" fill="rgb(250,127,30)" fg:x="5902" fg:w="883"/><text x="4.8666%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (37 samples, 0.03%)</title><rect x="5.3260%" y="245" width="0.0289%" height="15" fill="rgb(230,49,44)" fg:x="6809" fg:w="37"/><text x="5.5760%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (39 samples, 0.03%)</title><rect x="5.3252%" y="261" width="0.0305%" height="15" fill="rgb(229,67,23)" fg:x="6808" fg:w="39"/><text x="5.5752%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (80 samples, 0.06%)</title><rect x="5.3088%" y="277" width="0.0626%" height="15" fill="rgb(249,83,47)" fg:x="6787" fg:w="80"/><text x="5.5588%" y="287.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::wait_until_internal (990 samples, 0.77%)</title><rect x="4.6009%" y="293" width="0.7744%" height="15" fill="rgb(215,43,3)" fg:x="5882" fg:w="990"/><text x="4.8509%" y="303.50"></text></g><g><title>dkn-compute`tokio::runtime::io::scheduled_io::ScheduledIo::wake (26 samples, 0.02%)</title><rect x="5.4269%" y="261" width="0.0203%" height="15" fill="rgb(238,154,13)" fg:x="6938" fg:w="26"/><text x="5.6769%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::wake_by_val (14 samples, 0.01%)</title><rect x="5.4363%" y="245" width="0.0110%" height="15" fill="rgb(219,56,2)" fg:x="6950" fg:w="14"/><text x="5.6863%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1,027 samples, 0.80%)</title><rect x="5.4488%" y="261" width="0.8033%" height="15" fill="rgb(233,0,4)" fg:x="6966" fg:w="1027"/><text x="5.6988%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::io::driver::Driver::turn (1,084 samples, 0.85%)</title><rect x="5.4050%" y="277" width="0.8479%" height="15" fill="rgb(235,30,7)" fg:x="6910" fg:w="1084"/><text x="5.6550%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (13 samples, 0.01%)</title><rect x="6.2772%" y="229" width="0.0102%" height="15" fill="rgb(250,79,13)" fg:x="8025" fg:w="13"/><text x="6.5272%" y="239.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (32 samples, 0.03%)</title><rect x="6.2647%" y="261" width="0.0250%" height="15" fill="rgb(211,146,34)" fg:x="8009" fg:w="32"/><text x="6.5147%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (32 samples, 0.03%)</title><rect x="6.2647%" y="245" width="0.0250%" height="15" fill="rgb(228,22,38)" fg:x="8009" fg:w="32"/><text x="6.5147%" y="255.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::next_expiration (18 samples, 0.01%)</title><rect x="6.3061%" y="245" width="0.0141%" height="15" fill="rgb(235,168,5)" fg:x="8062" fg:w="18"/><text x="6.5561%" y="255.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (78 samples, 0.06%)</title><rect x="6.2913%" y="261" width="0.0610%" height="15" fill="rgb(221,155,16)" fg:x="8043" fg:w="78"/><text x="6.5413%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::poll (41 samples, 0.03%)</title><rect x="6.3202%" y="245" width="0.0321%" height="15" fill="rgb(215,215,53)" fg:x="8080" fg:w="41"/><text x="6.5702%" y="255.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::next_expiration (33 samples, 0.03%)</title><rect x="6.3265%" y="229" width="0.0258%" height="15" fill="rgb(223,4,10)" fg:x="8088" fg:w="33"/><text x="6.5765%" y="239.50"></text></g><g><title>dkn-compute`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (131 samples, 0.10%)</title><rect x="6.2561%" y="277" width="0.1025%" height="15" fill="rgb(234,103,6)" fg:x="7998" fg:w="131"/><text x="6.5061%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::time::wheel::Wheel::next_expiration (27 samples, 0.02%)</title><rect x="6.3601%" y="277" width="0.0211%" height="15" fill="rgb(227,97,0)" fg:x="8131" fg:w="27"/><text x="6.6101%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::time::Driver::park_internal (1,280 samples, 1.00%)</title><rect x="5.3816%" y="293" width="1.0012%" height="15" fill="rgb(234,150,53)" fg:x="6880" fg:w="1280"/><text x="5.6316%" y="303.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::park::Parker::park (2,329 samples, 1.82%)</title><rect x="4.5681%" y="309" width="1.8218%" height="15" fill="rgb(228,201,54)" fg:x="5840" fg:w="2329"/><text x="4.8181%" y="319.50">d..</text></g><g><title>dkn-compute`tokio::runtime::io::driver::Driver::turn (28 samples, 0.02%)</title><rect x="6.3937%" y="293" width="0.0219%" height="15" fill="rgb(222,22,37)" fg:x="8174" fg:w="28"/><text x="6.6437%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`kevent (28 samples, 0.02%)</title><rect x="6.3937%" y="277" width="0.0219%" height="15" fill="rgb(237,53,32)" fg:x="8174" fg:w="28"/><text x="6.6437%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::time::Driver::park_internal (39 samples, 0.03%)</title><rect x="6.3898%" y="309" width="0.0305%" height="15" fill="rgb(233,25,53)" fg:x="8169" fg:w="39"/><text x="6.6398%" y="319.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (2,411 samples, 1.89%)</title><rect x="4.5352%" y="325" width="1.8859%" height="15" fill="rgb(210,40,34)" fg:x="5798" fg:w="2411"/><text x="4.7852%" y="335.50">d..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (211 samples, 0.17%)</title><rect x="6.4461%" y="293" width="0.1650%" height="15" fill="rgb(241,220,44)" fg:x="8241" fg:w="211"/><text x="6.6961%" y="303.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (242 samples, 0.19%)</title><rect x="6.4352%" y="309" width="0.1893%" height="15" fill="rgb(235,28,35)" fg:x="8227" fg:w="242"/><text x="6.6852%" y="319.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (60 samples, 0.05%)</title><rect x="6.6260%" y="309" width="0.0469%" height="15" fill="rgb(210,56,17)" fg:x="8471" fg:w="60"/><text x="6.8760%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`kevent (59 samples, 0.05%)</title><rect x="6.6268%" y="293" width="0.0461%" height="15" fill="rgb(224,130,29)" fg:x="8472" fg:w="59"/><text x="6.8768%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (133 samples, 0.10%)</title><rect x="6.7137%" y="245" width="0.1040%" height="15" fill="rgb(235,212,8)" fg:x="8583" fg:w="133"/><text x="6.9637%" y="255.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (153 samples, 0.12%)</title><rect x="6.7011%" y="261" width="0.1197%" height="15" fill="rgb(223,33,50)" fg:x="8567" fg:w="153"/><text x="6.9511%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::driver::Handle::unpark (57 samples, 0.04%)</title><rect x="6.8208%" y="261" width="0.0446%" height="15" fill="rgb(219,149,13)" fg:x="8720" fg:w="57"/><text x="7.0708%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (55 samples, 0.04%)</title><rect x="6.8224%" y="245" width="0.0430%" height="15" fill="rgb(250,156,29)" fg:x="8722" fg:w="55"/><text x="7.0724%" y="255.50"></text></g><g><title>dkn-compute`tokio::runtime::context::with_scheduler (236 samples, 0.18%)</title><rect x="6.6957%" y="277" width="0.1846%" height="15" fill="rgb(216,193,19)" fg:x="8560" fg:w="236"/><text x="6.9457%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (240 samples, 0.19%)</title><rect x="6.6957%" y="293" width="0.1877%" height="15" fill="rgb(216,135,14)" fg:x="8560" fg:w="240"/><text x="6.9457%" y="303.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::upgrade::apply::OutboundUpgradeApply&lt;C,U&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="6.9499%" y="133" width="0.0219%" height="15" fill="rgb(241,47,5)" fg:x="8885" fg:w="28"/><text x="7.1999%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::Config as libp2p_core::upgrade::OutboundConnectionUpgrade&lt;T&gt;&gt;::upgrade_outbound::_{{closure}} (28 samples, 0.02%)</title><rect x="6.9499%" y="117" width="0.0219%" height="15" fill="rgb(233,42,35)" fg:x="8885" fg:w="28"/><text x="7.1999%" y="127.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::Transport&lt;T&gt; as libp2p_core::transport::Transport&gt;::dial::_{{closure}} (47 samples, 0.04%)</title><rect x="6.9718%" y="133" width="0.0368%" height="15" fill="rgb(231,13,6)" fg:x="8913" fg:w="47"/><text x="7.2218%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__connect (41 samples, 0.03%)</title><rect x="6.9765%" y="117" width="0.0321%" height="15" fill="rgb(207,181,40)" fg:x="8919" fg:w="41"/><text x="7.2265%" y="127.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (86 samples, 0.07%)</title><rect x="6.9499%" y="149" width="0.0673%" height="15" fill="rgb(254,173,49)" fg:x="8885" fg:w="86"/><text x="7.1999%" y="159.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::transport::map::MapFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (92 samples, 0.07%)</title><rect x="6.9499%" y="165" width="0.0720%" height="15" fill="rgb(221,1,38)" fg:x="8885" fg:w="92"/><text x="7.1999%" y="175.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$futures_util..future..try_future..into_future..IntoFuture$LT$libp2p_core..transport..timeout..Timeout$LT$libp2p_core..transport..map..MapFuture$LT$libp2p_core..either..EitherFuture$LT$libp2p_core..transport..map..MapFuture$LT$libp2p_core..transport..and_then..AndThenFuture$LT$libp2p_core..transport..and_then..AndThenFuture$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$dyn$u20$core..future..future..Future$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$libp2p_relay..priv_client..Connection$C$libp2p_relay..priv_client..transport..Error$GT$$u2b$core..marker..Send$GT$$GT$$C$libp2p_core..transport..upgrade..Builder$LT$libp2p_relay..priv_client..transport..Transport$GT$..authenticate$LT$libp2p_relay..priv_client..Connection$C$libp2p_noise..io..Output$LT$multistream_select..negotiated..Negotiated$LT$libp2p_relay..priv_client..Connection$GT$$GT$$C$libp2p_noise..Config$C$libp2p_noise..Error$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$libp2p_core..transport..upgrade..Authenticate$LT$libp2p_relay..priv_c� (15 samples, 0.01%)</title><rect x="7.0218%" y="165" width="0.0117%" height="15" fill="rgb(206,124,46)" fg:x="8977" fg:w="15"/><text x="7.2718%" y="175.50"></text></g><g><title>dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (112 samples, 0.09%)</title><rect x="6.9491%" y="213" width="0.0876%" height="15" fill="rgb(249,21,11)" fg:x="8884" fg:w="112"/><text x="7.1991%" y="223.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (112 samples, 0.09%)</title><rect x="6.9491%" y="197" width="0.0876%" height="15" fill="rgb(222,201,40)" fg:x="8884" fg:w="112"/><text x="7.1991%" y="207.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (112 samples, 0.09%)</title><rect x="6.9491%" y="181" width="0.0876%" height="15" fill="rgb(235,61,29)" fg:x="8884" fg:w="112"/><text x="7.1991%" y="191.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (115 samples, 0.09%)</title><rect x="6.9483%" y="229" width="0.0900%" height="15" fill="rgb(219,207,3)" fg:x="8883" fg:w="115"/><text x="7.1983%" y="239.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::connection::pool::concurrent_dial::ConcurrentDial as core::future::future::Future&gt;::poll (116 samples, 0.09%)</title><rect x="6.9483%" y="245" width="0.0907%" height="15" fill="rgb(222,56,46)" fg:x="8883" fg:w="116"/><text x="7.1983%" y="255.50"></text></g><g><title>dkn-compute`&lt;multistream_select::dialer_select::DialerSelectFuture&lt;R,I&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="7.1353%" y="181" width="0.0141%" height="15" fill="rgb(239,76,54)" fg:x="9122" fg:w="18"/><text x="7.3853%" y="191.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="7.1313%" y="213" width="0.0188%" height="15" fill="rgb(231,124,27)" fg:x="9117" fg:w="24"/><text x="7.3813%" y="223.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::StreamUpgrade&lt;UserData,TOk,TErr&gt;::new_outbound::_{{closure}} (22 samples, 0.02%)</title><rect x="7.1329%" y="197" width="0.0172%" height="15" fill="rgb(249,195,6)" fg:x="9119" fg:w="22"/><text x="7.3829%" y="207.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (98 samples, 0.08%)</title><rect x="7.1110%" y="229" width="0.0767%" height="15" fill="rgb(237,174,47)" fg:x="9091" fg:w="98"/><text x="7.3610%" y="239.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (42 samples, 0.03%)</title><rect x="7.1548%" y="213" width="0.0329%" height="15" fill="rgb(206,201,31)" fg:x="9147" fg:w="42"/><text x="7.4048%" y="223.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (18 samples, 0.01%)</title><rect x="7.3097%" y="133" width="0.0141%" height="15" fill="rgb(231,57,52)" fg:x="9345" fg:w="18"/><text x="7.5597%" y="143.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (20 samples, 0.02%)</title><rect x="7.3097%" y="149" width="0.0156%" height="15" fill="rgb(248,177,22)" fg:x="9345" fg:w="20"/><text x="7.5597%" y="159.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::stream::into_future::StreamFuture&lt;St&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="7.3058%" y="165" width="0.0219%" height="15" fill="rgb(215,211,37)" fg:x="9340" fg:w="28"/><text x="7.5558%" y="175.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.05%)</title><rect x="7.2980%" y="181" width="0.0477%" height="15" fill="rgb(241,128,51)" fg:x="9330" fg:w="61"/><text x="7.5480%" y="191.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (13 samples, 0.01%)</title><rect x="7.3480%" y="149" width="0.0102%" height="15" fill="rgb(227,165,31)" fg:x="9394" fg:w="13"/><text x="7.5980%" y="159.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (17 samples, 0.01%)</title><rect x="7.3472%" y="165" width="0.0133%" height="15" fill="rgb(228,167,24)" fg:x="9393" fg:w="17"/><text x="7.5972%" y="175.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (447 samples, 0.35%)</title><rect x="7.3684%" y="133" width="0.3496%" height="15" fill="rgb(228,143,12)" fg:x="9420" fg:w="447"/><text x="7.6184%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (445 samples, 0.35%)</title><rect x="7.3699%" y="117" width="0.3481%" height="15" fill="rgb(249,149,8)" fg:x="9422" fg:w="445"/><text x="7.6199%" y="127.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (462 samples, 0.36%)</title><rect x="7.3676%" y="149" width="0.3614%" height="15" fill="rgb(243,35,44)" fg:x="9419" fg:w="462"/><text x="7.6176%" y="159.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (472 samples, 0.37%)</title><rect x="7.3605%" y="165" width="0.3692%" height="15" fill="rgb(246,89,9)" fg:x="9410" fg:w="472"/><text x="7.6105%" y="175.50"></text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (109 samples, 0.09%)</title><rect x="7.7336%" y="133" width="0.0853%" height="15" fill="rgb(233,213,13)" fg:x="9887" fg:w="109"/><text x="7.9836%" y="143.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_seal (109 samples, 0.09%)</title><rect x="7.7336%" y="117" width="0.0853%" height="15" fill="rgb(233,141,41)" fg:x="9887" fg:w="109"/><text x="7.9836%" y="127.50"></text></g><g><title>dkn-compute`ring_core_0_17_8_chacha20_poly1305_seal (109 samples, 0.09%)</title><rect x="7.7336%" y="101" width="0.0853%" height="15" fill="rgb(239,167,4)" fg:x="9887" fg:w="109"/><text x="7.9836%" y="111.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::write_message (113 samples, 0.09%)</title><rect x="7.7329%" y="149" width="0.0884%" height="15" fill="rgb(209,217,16)" fg:x="9886" fg:w="113"/><text x="7.9829%" y="159.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (125 samples, 0.10%)</title><rect x="7.7297%" y="165" width="0.0978%" height="15" fill="rgb(219,88,35)" fg:x="9882" fg:w="125"/><text x="7.9797%" y="175.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_flush (618 samples, 0.48%)</title><rect x="7.3457%" y="181" width="0.4834%" height="15" fill="rgb(220,193,23)" fg:x="9391" fg:w="618"/><text x="7.5957%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.03%)</title><rect x="7.9386%" y="69" width="0.0305%" height="15" fill="rgb(230,90,52)" fg:x="10149" fg:w="39"/><text x="8.1886%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.02%)</title><rect x="7.9488%" y="53" width="0.0203%" height="15" fill="rgb(252,106,19)" fg:x="10162" fg:w="26"/><text x="8.1988%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (55 samples, 0.04%)</title><rect x="7.9323%" y="85" width="0.0430%" height="15" fill="rgb(206,74,20)" fg:x="10141" fg:w="55"/><text x="8.1823%" y="95.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::BytesMut::zeroed (60 samples, 0.05%)</title><rect x="7.9300%" y="101" width="0.0469%" height="15" fill="rgb(230,138,44)" fg:x="10138" fg:w="60"/><text x="8.1800%" y="111.50"></text></g><g><title>dkn-compute`libp2p_noise::io::framed::decode_length_prefixed (38 samples, 0.03%)</title><rect x="7.9777%" y="101" width="0.0297%" height="15" fill="rgb(235,182,43)" fg:x="10199" fg:w="38"/><text x="8.2277%" y="111.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_open (590 samples, 0.46%)</title><rect x="8.0176%" y="53" width="0.4615%" height="15" fill="rgb(242,16,51)" fg:x="10250" fg:w="590"/><text x="8.2676%" y="63.50"></text></g><g><title>dkn-compute`ring_core_0_17_8_chacha20_poly1305_open (588 samples, 0.46%)</title><rect x="8.0191%" y="37" width="0.4599%" height="15" fill="rgb(248,9,4)" fg:x="10252" fg:w="588"/><text x="8.2691%" y="47.50"></text></g><g><title>dkn-compute`ring::aead::less_safe_key::open_within_ (598 samples, 0.47%)</title><rect x="8.0121%" y="69" width="0.4678%" height="15" fill="rgb(210,31,22)" fg:x="10243" fg:w="598"/><text x="8.2621%" y="79.50"></text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::decrypt (612 samples, 0.48%)</title><rect x="8.0082%" y="85" width="0.4787%" height="15" fill="rgb(239,54,39)" fg:x="10238" fg:w="612"/><text x="8.2582%" y="95.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::read_message (628 samples, 0.49%)</title><rect x="8.0074%" y="101" width="0.4912%" height="15" fill="rgb(230,99,41)" fg:x="10237" fg:w="628"/><text x="8.2574%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="8.4885%" y="85" width="0.0102%" height="15" fill="rgb(253,106,12)" fg:x="10852" fg:w="13"/><text x="8.7385%" y="95.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (791 samples, 0.62%)</title><rect x="7.9042%" y="117" width="0.6187%" height="15" fill="rgb(213,46,41)" fg:x="10105" fg:w="791"/><text x="8.1542%" y="127.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,278 samples, 1.00%)</title><rect x="8.5448%" y="69" width="0.9997%" height="15" fill="rgb(215,133,35)" fg:x="10924" fg:w="1278"/><text x="8.7948%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,272 samples, 0.99%)</title><rect x="8.5495%" y="53" width="0.9950%" height="15" fill="rgb(213,28,5)" fg:x="10930" fg:w="1272"/><text x="8.7995%" y="63.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (25 samples, 0.02%)</title><rect x="9.5444%" y="69" width="0.0196%" height="15" fill="rgb(215,77,49)" fg:x="12202" fg:w="25"/><text x="9.7944%" y="79.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_read_priv (1,315 samples, 1.03%)</title><rect x="8.5432%" y="85" width="1.0286%" height="15" fill="rgb(248,100,22)" fg:x="10922" fg:w="1315"/><text x="8.7932%" y="95.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (1,322 samples, 1.03%)</title><rect x="8.5401%" y="101" width="1.0341%" height="15" fill="rgb(208,67,9)" fg:x="10918" fg:w="1322"/><text x="8.7901%" y="111.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1,353 samples, 1.06%)</title><rect x="8.5245%" y="117" width="1.0583%" height="15" fill="rgb(219,133,21)" fg:x="10898" fg:w="1353"/><text x="8.7745%" y="127.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,175 samples, 1.70%)</title><rect x="7.8932%" y="133" width="1.7013%" height="15" fill="rgb(246,46,29)" fg:x="10091" fg:w="2175"/><text x="8.1432%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.01%)</title><rect x="9.6133%" y="117" width="0.0149%" height="15" fill="rgb(246,185,52)" fg:x="12290" fg:w="19"/><text x="9.8633%" y="127.50"></text></g><g><title>dkn-compute`bytes::bytes_mut::shared_v_drop (35 samples, 0.03%)</title><rect x="9.6039%" y="133" width="0.0274%" height="15" fill="rgb(252,136,11)" fg:x="12278" fg:w="35"/><text x="9.8539%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (36 samples, 0.03%)</title><rect x="9.6446%" y="133" width="0.0282%" height="15" fill="rgb(219,138,53)" fg:x="12330" fg:w="36"/><text x="9.8946%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (2,464 samples, 1.93%)</title><rect x="7.8807%" y="149" width="1.9273%" height="15" fill="rgb(211,51,23)" fg:x="10075" fg:w="2464"/><text x="8.1307%" y="159.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memset (173 samples, 0.14%)</title><rect x="9.6727%" y="133" width="0.1353%" height="15" fill="rgb(247,221,28)" fg:x="12366" fg:w="173"/><text x="9.9227%" y="143.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (2,498 samples, 1.95%)</title><rect x="7.8690%" y="165" width="1.9539%" height="15" fill="rgb(251,222,45)" fg:x="10060" fg:w="2498"/><text x="8.1190%" y="175.50">d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="9.8120%" y="149" width="0.0110%" height="15" fill="rgb(217,162,53)" fg:x="12544" fg:w="14"/><text x="10.0620%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.02%)</title><rect x="9.8276%" y="149" width="0.0172%" height="15" fill="rgb(229,93,14)" fg:x="12564" fg:w="22"/><text x="10.0776%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.01%)</title><rect x="9.8331%" y="133" width="0.0117%" height="15" fill="rgb(209,67,49)" fg:x="12571" fg:w="15"/><text x="10.0831%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.02%)</title><rect x="9.8245%" y="165" width="0.0235%" height="15" fill="rgb(213,87,29)" fg:x="12560" fg:w="30"/><text x="10.0745%" y="175.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,568 samples, 2.01%)</title><rect x="7.8408%" y="181" width="2.0087%" height="15" fill="rgb(205,151,52)" fg:x="10024" fg:w="2568"/><text x="8.0908%" y="191.50">d..</text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (19 samples, 0.01%)</title><rect x="9.8573%" y="117" width="0.0149%" height="15" fill="rgb(253,215,39)" fg:x="12602" fg:w="19"/><text x="10.1073%" y="127.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (20 samples, 0.02%)</title><rect x="9.8573%" y="133" width="0.0156%" height="15" fill="rgb(221,220,41)" fg:x="12602" fg:w="20"/><text x="10.1073%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (23 samples, 0.02%)</title><rect x="9.8565%" y="149" width="0.0180%" height="15" fill="rgb(218,133,21)" fg:x="12601" fg:w="23"/><text x="10.1065%" y="159.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_flush (33 samples, 0.03%)</title><rect x="9.8495%" y="181" width="0.0258%" height="15" fill="rgb(221,193,43)" fg:x="12592" fg:w="33"/><text x="10.0995%" y="191.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (30 samples, 0.02%)</title><rect x="9.8519%" y="165" width="0.0235%" height="15" fill="rgb(240,128,52)" fg:x="12595" fg:w="30"/><text x="10.1019%" y="175.50"></text></g><g><title>dkn-compute`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (100 samples, 0.08%)</title><rect x="9.9027%" y="117" width="0.0782%" height="15" fill="rgb(253,114,12)" fg:x="12660" fg:w="100"/><text x="10.1527%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (99 samples, 0.08%)</title><rect x="9.9035%" y="101" width="0.0774%" height="15" fill="rgb(215,223,47)" fg:x="12661" fg:w="99"/><text x="10.1535%" y="111.50"></text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (16 samples, 0.01%)</title><rect x="9.9809%" y="117" width="0.0125%" height="15" fill="rgb(248,225,23)" fg:x="12760" fg:w="16"/><text x="10.2309%" y="127.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_write_priv (122 samples, 0.10%)</title><rect x="9.9011%" y="133" width="0.0954%" height="15" fill="rgb(250,108,0)" fg:x="12658" fg:w="122"/><text x="10.1511%" y="143.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (128 samples, 0.10%)</title><rect x="9.8980%" y="149" width="0.1001%" height="15" fill="rgb(228,208,7)" fg:x="12654" fg:w="128"/><text x="10.1480%" y="159.50"></text></g><g><title>dkn-compute`&lt;snow::resolvers::ring::CipherChaChaPoly as snow::types::Cipher&gt;::encrypt (105 samples, 0.08%)</title><rect x="9.9981%" y="117" width="0.0821%" height="15" fill="rgb(244,45,10)" fg:x="12782" fg:w="105"/><text x="10.2481%" y="127.50"></text></g><g><title>dkn-compute`ring::aead::chacha20_poly1305::chacha20_poly1305_seal (105 samples, 0.08%)</title><rect x="9.9981%" y="101" width="0.0821%" height="15" fill="rgb(207,125,25)" fg:x="12782" fg:w="105"/><text x="10.2481%" y="111.50"></text></g><g><title>dkn-compute`ring_core_0_17_8_chacha20_poly1305_seal (105 samples, 0.08%)</title><rect x="9.9981%" y="85" width="0.0821%" height="15" fill="rgb(210,195,18)" fg:x="12782" fg:w="105"/><text x="10.2481%" y="95.50"></text></g><g><title>dkn-compute`snow::transportstate::TransportState::write_message (109 samples, 0.09%)</title><rect x="9.9981%" y="133" width="0.0853%" height="15" fill="rgb(249,80,12)" fg:x="12782" fg:w="109"/><text x="10.2481%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::framed::Codec&lt;snow::transportstate::TransportState&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (112 samples, 0.09%)</title><rect x="9.9981%" y="149" width="0.0876%" height="15" fill="rgb(221,65,9)" fg:x="12782" fg:w="112"/><text x="10.2481%" y="159.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (251 samples, 0.20%)</title><rect x="9.8933%" y="165" width="0.1963%" height="15" fill="rgb(235,49,36)" fg:x="12648" fg:w="251"/><text x="10.1433%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.01%)</title><rect x="10.0959%" y="165" width="0.0102%" height="15" fill="rgb(225,32,20)" fg:x="12907" fg:w="13"/><text x="10.3459%" y="175.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (317 samples, 0.25%)</title><rect x="9.8753%" y="181" width="0.2480%" height="15" fill="rgb(215,141,46)" fg:x="12625" fg:w="317"/><text x="10.1253%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (22 samples, 0.02%)</title><rect x="10.1499%" y="133" width="0.0172%" height="15" fill="rgb(250,160,47)" fg:x="12976" fg:w="22"/><text x="10.3999%" y="143.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (36 samples, 0.03%)</title><rect x="10.1405%" y="165" width="0.0282%" height="15" fill="rgb(216,222,40)" fg:x="12964" fg:w="36"/><text x="10.3905%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (36 samples, 0.03%)</title><rect x="10.1405%" y="149" width="0.0282%" height="15" fill="rgb(234,217,39)" fg:x="12964" fg:w="36"/><text x="10.3905%" y="159.50"></text></g><g><title>dkn-compute`yamux::connection::rtt::Rtt::next_ping (51 samples, 0.04%)</title><rect x="10.1327%" y="181" width="0.0399%" height="15" fill="rgb(207,178,40)" fg:x="12954" fg:w="51"/><text x="10.3827%" y="191.50"></text></g><g><title>dkn-compute`yamux::connection::Connection&lt;T&gt;::poll_next_inbound (3,741 samples, 2.93%)</title><rect x="7.2518%" y="197" width="2.9262%" height="15" fill="rgb(221,136,13)" fg:x="9271" fg:w="3741"/><text x="7.5018%" y="207.50">dk..</text></g><g><title>dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (3,859 samples, 3.02%)</title><rect x="7.1900%" y="213" width="3.0185%" height="15" fill="rgb(249,199,10)" fg:x="9192" fg:w="3859"/><text x="7.4400%" y="223.50">dkn..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.03%)</title><rect x="10.1788%" y="197" width="0.0297%" height="15" fill="rgb(249,222,13)" fg:x="13013" fg:w="38"/><text x="10.4288%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll (3,873 samples, 3.03%)</title><rect x="7.1884%" y="229" width="3.0295%" height="15" fill="rgb(244,185,38)" fg:x="9190" fg:w="3873"/><text x="7.4384%" y="239.50">dkn..</text></g><g><title>dkn-compute`tokio::runtime::io::registration::Registration::poll_ready (17 samples, 0.01%)</title><rect x="10.2875%" y="69" width="0.0133%" height="15" fill="rgb(236,202,9)" fg:x="13152" fg:w="17"/><text x="10.5375%" y="79.50"></text></g><g><title>dkn-compute`tokio::net::tcp::stream::TcpStream::poll_read_priv (22 samples, 0.02%)</title><rect x="10.2875%" y="85" width="0.0172%" height="15" fill="rgb(250,229,37)" fg:x="13152" fg:w="22"/><text x="10.5375%" y="95.50"></text></g><g><title>dkn-compute`&lt;libp2p_tcp::provider::tokio::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (23 samples, 0.02%)</title><rect x="10.2875%" y="101" width="0.0180%" height="15" fill="rgb(206,174,23)" fg:x="13152" fg:w="23"/><text x="10.5375%" y="111.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (31 samples, 0.02%)</title><rect x="10.2828%" y="117" width="0.0242%" height="15" fill="rgb(211,33,43)" fg:x="13146" fg:w="31"/><text x="10.5328%" y="127.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (41 samples, 0.03%)</title><rect x="10.2758%" y="133" width="0.0321%" height="15" fill="rgb(245,58,50)" fg:x="13137" fg:w="41"/><text x="10.5258%" y="143.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (158 samples, 0.12%)</title><rect x="10.2680%" y="181" width="0.1236%" height="15" fill="rgb(244,68,36)" fg:x="13127" fg:w="158"/><text x="10.5180%" y="191.50"></text></g><g><title>dkn-compute`&lt;multistream_select::negotiated::Negotiated&lt;TInner&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (155 samples, 0.12%)</title><rect x="10.2703%" y="165" width="0.1212%" height="15" fill="rgb(232,229,15)" fg:x="13130" fg:w="155"/><text x="10.5203%" y="175.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (153 samples, 0.12%)</title><rect x="10.2719%" y="149" width="0.1197%" height="15" fill="rgb(254,30,23)" fg:x="13132" fg:w="153"/><text x="10.5219%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (104 samples, 0.08%)</title><rect x="10.3102%" y="133" width="0.0813%" height="15" fill="rgb(235,160,14)" fg:x="13181" fg:w="104"/><text x="10.5602%" y="143.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_flush (14 samples, 0.01%)</title><rect x="10.3916%" y="181" width="0.0110%" height="15" fill="rgb(212,155,44)" fg:x="13285" fg:w="14"/><text x="10.6416%" y="191.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (14 samples, 0.01%)</title><rect x="10.3916%" y="165" width="0.0110%" height="15" fill="rgb(226,2,50)" fg:x="13285" fg:w="14"/><text x="10.6416%" y="175.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (13 samples, 0.01%)</title><rect x="10.3924%" y="149" width="0.0102%" height="15" fill="rgb(234,177,6)" fg:x="13286" fg:w="13"/><text x="10.6424%" y="159.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;&lt;U as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_ready (13 samples, 0.01%)</title><rect x="10.4096%" y="149" width="0.0102%" height="15" fill="rgb(217,24,9)" fg:x="13308" fg:w="13"/><text x="10.6596%" y="159.50"></text></g><g><title>dkn-compute`&lt;libp2p_noise::io::Output&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (18 samples, 0.01%)</title><rect x="10.4088%" y="165" width="0.0141%" height="15" fill="rgb(220,13,46)" fg:x="13307" fg:w="18"/><text x="10.6588%" y="175.50"></text></g><g><title>dkn-compute`&lt;yamux::frame::io::Io&lt;T&gt; as futures_sink::Sink&lt;yamux::frame::Frame&lt;()&gt;&gt;&gt;::poll_ready (27 samples, 0.02%)</title><rect x="10.4025%" y="181" width="0.0211%" height="15" fill="rgb(239,221,27)" fg:x="13299" fg:w="27"/><text x="10.6525%" y="191.50"></text></g><g><title>dkn-compute`yamux::connection::Connection&lt;T&gt;::poll_next_inbound (237 samples, 0.19%)</title><rect x="10.2476%" y="197" width="0.1854%" height="15" fill="rgb(222,198,25)" fg:x="13101" fg:w="237"/><text x="10.4976%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_yamux::Muxer&lt;C&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (317 samples, 0.25%)</title><rect x="10.2187%" y="213" width="0.2480%" height="15" fill="rgb(211,99,13)" fg:x="13064" fg:w="317"/><text x="10.4687%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.03%)</title><rect x="10.4330%" y="197" width="0.0336%" height="15" fill="rgb(232,111,31)" fg:x="13338" fg:w="43"/><text x="10.6830%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_core::muxing::boxed::Wrap&lt;T&gt; as libp2p_core::muxing::StreamMuxer&gt;::poll_inbound (323 samples, 0.25%)</title><rect x="10.2179%" y="229" width="0.2527%" height="15" fill="rgb(245,82,37)" fg:x="13063" fg:w="323"/><text x="10.4679%" y="239.50"></text></g><g><title>dkn-compute`quick_protobuf::writer::Writer&lt;W&gt;::write_with_tag (16 samples, 0.01%)</title><rect x="10.6982%" y="133" width="0.0125%" height="15" fill="rgb(227,149,46)" fg:x="13677" fg:w="16"/><text x="10.9482%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message as quick_protobuf::message::MessageWrite&gt;::write_message (57 samples, 0.04%)</title><rect x="10.6841%" y="149" width="0.0446%" height="15" fill="rgb(218,36,50)" fg:x="13659" fg:w="57"/><text x="10.9341%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.02%)</title><rect x="10.7107%" y="133" width="0.0180%" height="15" fill="rgb(226,80,48)" fg:x="13693" fg:w="23"/><text x="10.9607%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message as quick_protobuf::message::MessageRead&gt;::from_reader (84 samples, 0.07%)</title><rect x="10.7686%" y="117" width="0.0657%" height="15" fill="rgb(238,224,15)" fg:x="13767" fg:w="84"/><text x="11.0186%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.02%)</title><rect x="10.8140%" y="101" width="0.0203%" height="15" fill="rgb(241,136,10)" fg:x="13825" fg:w="26"/><text x="11.0640%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.02%)</title><rect x="10.8140%" y="85" width="0.0203%" height="15" fill="rgb(208,32,45)" fg:x="13825" fg:w="26"/><text x="11.0640%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.01%)</title><rect x="10.8210%" y="69" width="0.0133%" height="15" fill="rgb(207,135,9)" fg:x="13834" fg:w="17"/><text x="11.0710%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.02%)</title><rect x="10.8429%" y="85" width="0.0235%" height="15" fill="rgb(206,86,44)" fg:x="13862" fg:w="30"/><text x="11.0929%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.02%)</title><rect x="10.8429%" y="69" width="0.0235%" height="15" fill="rgb(245,177,15)" fg:x="13862" fg:w="30"/><text x="11.0929%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.02%)</title><rect x="10.8492%" y="53" width="0.0172%" height="15" fill="rgb(206,64,50)" fg:x="13870" fg:w="22"/><text x="11.0992%" y="63.50"></text></g><g><title>dkn-compute`alloc::raw_vec::finish_grow (32 samples, 0.03%)</title><rect x="10.8421%" y="101" width="0.0250%" height="15" fill="rgb(234,36,40)" fg:x="13861" fg:w="32"/><text x="11.0921%" y="111.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (41 samples, 0.03%)</title><rect x="10.8390%" y="117" width="0.0321%" height="15" fill="rgb(213,64,8)" fg:x="13857" fg:w="41"/><text x="11.0890%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.02%)</title><rect x="10.8875%" y="117" width="0.0172%" height="15" fill="rgb(210,75,36)" fg:x="13919" fg:w="22"/><text x="11.1375%" y="127.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC as quick_protobuf::message::MessageRead&gt;::from_reader (210 samples, 0.16%)</title><rect x="10.7529%" y="133" width="0.1643%" height="15" fill="rgb(229,88,21)" fg:x="13747" fg:w="210"/><text x="11.0029%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="10.9063%" y="117" width="0.0110%" height="15" fill="rgb(252,204,47)" fg:x="13943" fg:w="14"/><text x="11.1563%" y="127.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::decoder::Decoder&gt;::decode (256 samples, 0.20%)</title><rect x="10.7303%" y="149" width="0.2002%" height="15" fill="rgb(208,77,27)" fg:x="13718" fg:w="256"/><text x="10.9803%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (26 samples, 0.02%)</title><rect x="10.9469%" y="85" width="0.0203%" height="15" fill="rgb(221,76,26)" fg:x="13995" fg:w="26"/><text x="11.1969%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.02%)</title><rect x="10.9501%" y="69" width="0.0172%" height="15" fill="rgb(225,139,18)" fg:x="13999" fg:w="22"/><text x="11.2001%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.02%)</title><rect x="10.9516%" y="53" width="0.0156%" height="15" fill="rgb(230,137,11)" fg:x="14001" fg:w="20"/><text x="11.2016%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.01%)</title><rect x="10.9571%" y="37" width="0.0102%" height="15" fill="rgb(212,28,1)" fg:x="14008" fg:w="13"/><text x="11.2071%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (31 samples, 0.02%)</title><rect x="10.9446%" y="101" width="0.0242%" height="15" fill="rgb(248,164,17)" fg:x="13992" fg:w="31"/><text x="11.1946%" y="111.50"></text></g><g><title>dkn-compute`alloc::raw_vec::finish_grow (39 samples, 0.03%)</title><rect x="10.9391%" y="133" width="0.0305%" height="15" fill="rgb(222,171,42)" fg:x="13985" fg:w="39"/><text x="11.1891%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (33 samples, 0.03%)</title><rect x="10.9438%" y="117" width="0.0258%" height="15" fill="rgb(243,84,45)" fg:x="13991" fg:w="33"/><text x="11.1938%" y="127.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (42 samples, 0.03%)</title><rect x="10.9375%" y="149" width="0.0329%" height="15" fill="rgb(252,49,23)" fg:x="13983" fg:w="42"/><text x="11.1875%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.01%)</title><rect x="10.9782%" y="133" width="0.0117%" height="15" fill="rgb(215,19,7)" fg:x="14035" fg:w="15"/><text x="11.2282%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.01%)</title><rect x="10.9900%" y="133" width="0.0149%" height="15" fill="rgb(238,81,41)" fg:x="14050" fg:w="19"/><text x="11.2400%" y="143.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message&gt; (49 samples, 0.04%)</title><rect x="10.9727%" y="149" width="0.0383%" height="15" fill="rgb(210,199,37)" fg:x="14028" fg:w="49"/><text x="11.2227%" y="159.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::eq_var (17 samples, 0.01%)</title><rect x="11.0291%" y="85" width="0.0133%" height="15" fill="rgb(244,192,49)" fg:x="14100" fg:w="17"/><text x="11.2791%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::mul_in_place (61 samples, 0.05%)</title><rect x="11.0424%" y="85" width="0.0477%" height="15" fill="rgb(226,211,11)" fg:x="14117" fg:w="61"/><text x="11.2924%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqr_in_place (51 samples, 0.04%)</title><rect x="11.0963%" y="85" width="0.0399%" height="15" fill="rgb(236,162,54)" fg:x="14186" fg:w="51"/><text x="11.3463%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::mul_in_place (353 samples, 0.28%)</title><rect x="11.1495%" y="69" width="0.2761%" height="15" fill="rgb(220,229,9)" fg:x="14254" fg:w="353"/><text x="11.3995%" y="79.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqr_in_place (5,064 samples, 3.96%)</title><rect x="11.4256%" y="69" width="3.9611%" height="15" fill="rgb(250,87,22)" fg:x="14607" fg:w="5064"/><text x="11.6756%" y="79.50">dkn-..</text></g><g><title>dkn-compute`libsecp256k1::PublicKey::parse_slice (5,824 samples, 4.56%)</title><rect x="11.0236%" y="101" width="4.5556%" height="15" fill="rgb(239,43,17)" fg:x="14093" fg:w="5824"/><text x="11.2736%" y="111.50">dkn-c..</text></g><g><title>dkn-compute`libsecp256k1_core::group::Affine::set_xo_var (5,677 samples, 4.44%)</title><rect x="11.1386%" y="85" width="4.4406%" height="15" fill="rgb(231,177,25)" fg:x="14240" fg:w="5677"/><text x="11.3886%" y="95.50">dkn-c..</text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqrt (246 samples, 0.19%)</title><rect x="15.3867%" y="69" width="0.1924%" height="15" fill="rgb(219,179,1)" fg:x="19671" fg:w="246"/><text x="15.6367%" y="79.50"></text></g><g><title>dkn-compute`libp2p_identity::secp256k1::PublicKey::try_from_bytes (5,833 samples, 4.56%)</title><rect x="11.0228%" y="117" width="4.5626%" height="15" fill="rgb(238,219,53)" fg:x="14092" fg:w="5833"/><text x="11.2728%" y="127.50">dkn-c..</text></g><g><title>dkn-compute`&lt;libp2p_identity::keypair::PublicKey as core::convert::TryFrom&lt;libp2p_identity::proto::keys_proto::PublicKey&gt;&gt;::try_from (5,857 samples, 4.58%)</title><rect x="11.0126%" y="133" width="4.5814%" height="15" fill="rgb(232,167,36)" fg:x="14079" fg:w="5857"/><text x="11.2626%" y="143.50">dkn-c..</text></g><g><title>dkn-compute`libp2p_identity::keypair::PublicKey::try_decode_protobuf (5,877 samples, 4.60%)</title><rect x="11.0126%" y="149" width="4.5970%" height="15" fill="rgb(244,19,51)" fg:x="14079" fg:w="5877"/><text x="11.2626%" y="159.50">dkn-c..</text></g><g><title>dkn-compute`&lt;D as digest::digest::Digest&gt;::digest (18 samples, 0.01%)</title><rect x="15.6167%" y="133" width="0.0141%" height="15" fill="rgb(224,6,22)" fg:x="19965" fg:w="18"/><text x="15.8667%" y="143.50"></text></g><g><title>dkn-compute`libsecp256k1::Message::parse_slice (53 samples, 0.04%)</title><rect x="15.6308%" y="133" width="0.0415%" height="15" fill="rgb(224,145,5)" fg:x="19983" fg:w="53"/><text x="15.8808%" y="143.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::set_b32 (46 samples, 0.04%)</title><rect x="15.6362%" y="117" width="0.0360%" height="15" fill="rgb(234,130,49)" fg:x="19990" fg:w="46"/><text x="15.8862%" y="127.50"></text></g><g><title>dkn-compute`subtle::black_box (32 samples, 0.03%)</title><rect x="15.6472%" y="101" width="0.0250%" height="15" fill="rgb(254,6,2)" fg:x="20004" fg:w="32"/><text x="15.8972%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::check_overflow (21 samples, 0.02%)</title><rect x="15.7027%" y="85" width="0.0164%" height="15" fill="rgb(208,96,46)" fg:x="20075" fg:w="21"/><text x="15.9527%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::set_b32 (63 samples, 0.05%)</title><rect x="15.6965%" y="101" width="0.0493%" height="15" fill="rgb(239,3,39)" fg:x="20067" fg:w="63"/><text x="15.9465%" y="111.50"></text></g><g><title>dkn-compute`subtle::black_box (34 samples, 0.03%)</title><rect x="15.7192%" y="85" width="0.0266%" height="15" fill="rgb(233,210,1)" fg:x="20096" fg:w="34"/><text x="15.9692%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::der::Decoder::read_integer (87 samples, 0.07%)</title><rect x="15.6785%" y="117" width="0.0681%" height="15" fill="rgb(244,137,37)" fg:x="20044" fg:w="87"/><text x="15.9285%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1::Signature::parse_der (101 samples, 0.08%)</title><rect x="15.6722%" y="133" width="0.0790%" height="15" fill="rgb(240,136,2)" fg:x="20036" fg:w="101"/><text x="15.9222%" y="143.50"></text></g><g><title>dkn-compute`&lt;libsecp256k1_core::group::Affine as core::convert::From&lt;libsecp256k1_core::group::AffineStorage&gt;&gt;::from (49 samples, 0.04%)</title><rect x="15.7645%" y="117" width="0.0383%" height="15" fill="rgb(239,18,37)" fg:x="20154" fg:w="49"/><text x="16.0145%" y="127.50"></text></g><g><title>dkn-compute`core::array::_&lt;impl core::default::Default for [T (74 samples, 0.06%)</title><rect x="15.8029%" y="117" width="0.0579%" height="15" fill="rgb(218,185,22)" fg:x="20203" fg:w="74"/><text x="16.0529%" y="127.50"></text></g><g><title> _]&gt;::default (74 samples, 0.06%)</title><rect x="15.8029%" y="101" width="0.0579%" height="15" fill="rgb(225,218,4)" fg:x="20203" fg:w="74"/><text x="16.0529%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::ecmult::ecmult_wnaf (506 samples, 0.40%)</title><rect x="17.6168%" y="101" width="0.3958%" height="15" fill="rgb(230,182,32)" fg:x="22522" fg:w="506"/><text x="17.8668%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::mul_in_place (1,614 samples, 1.26%)</title><rect x="18.0501%" y="85" width="1.2625%" height="15" fill="rgb(242,56,43)" fg:x="23076" fg:w="1614"/><text x="18.3001%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqr_in_place (417 samples, 0.33%)</title><rect x="19.3126%" y="85" width="0.3262%" height="15" fill="rgb(233,99,24)" fg:x="24690" fg:w="417"/><text x="19.5626%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::add_ge_var_in_place (164 samples, 0.13%)</title><rect x="19.6388%" y="85" width="0.1283%" height="15" fill="rgb(234,209,42)" fg:x="25107" fg:w="164"/><text x="19.8888%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::ecmult::odd_multiples_table (2,256 samples, 1.76%)</title><rect x="18.0126%" y="101" width="1.7647%" height="15" fill="rgb(227,7,12)" fg:x="23028" fg:w="2256"/><text x="18.2626%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::double_var_in_place (13 samples, 0.01%)</title><rect x="19.7671%" y="85" width="0.0102%" height="15" fill="rgb(245,203,43)" fg:x="25271" fg:w="13"/><text x="20.0171%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::mul_in_place (36,647 samples, 28.67%)</title><rect x="19.7772%" y="101" width="28.6654%" height="15" fill="rgb(238,205,33)" fg:x="25284" fg:w="36647"/><text x="20.0272%" y="111.50">dkn-compute`libsecp256k1_core::field::Field::m..</text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqr_in_place (21,652 samples, 16.94%)</title><rect x="48.4426%" y="101" width="16.9363%" height="15" fill="rgb(231,56,7)" fg:x="61931" fg:w="21652"/><text x="48.6926%" y="111.50">dkn-compute`libsecp256k1_c..</text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::add_ge_var_in_place (945 samples, 0.74%)</title><rect x="65.3789%" y="101" width="0.7392%" height="15" fill="rgb(244,186,29)" fg:x="83583" fg:w="945"/><text x="65.6289%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::add_zinv_var_in_place (403 samples, 0.32%)</title><rect x="66.1181%" y="101" width="0.3152%" height="15" fill="rgb(234,111,31)" fg:x="84528" fg:w="403"/><text x="66.3681%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::double_var_in_place (2,074 samples, 1.62%)</title><rect x="66.4333%" y="101" width="1.6223%" height="15" fill="rgb(241,149,10)" fg:x="84931" fg:w="2074"/><text x="66.6833%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::globalz_set_table_gej (34 samples, 0.03%)</title><rect x="68.0556%" y="101" width="0.0266%" height="15" fill="rgb(249,206,44)" fg:x="87005" fg:w="34"/><text x="68.3056%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::ecmult::ECMultContext::ecmult (66,789 samples, 52.24%)</title><rect x="15.8607%" y="117" width="52.2426%" height="15" fill="rgb(251,153,30)" fg:x="20277" fg:w="66789"/><text x="16.1107%" y="127.50">dkn-compute`libsecp256k1_core::ecmult::ECMultContext::ecmult</text></g><g><title>libsystem_platform.dylib`_platform_memset (25 samples, 0.02%)</title><rect x="68.0838%" y="101" width="0.0196%" height="15" fill="rgb(239,152,38)" fg:x="87041" fg:w="25"/><text x="68.3338%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::mul_in_place (53 samples, 0.04%)</title><rect x="68.1135%" y="117" width="0.0415%" height="15" fill="rgb(249,139,47)" fg:x="87079" fg:w="53"/><text x="68.3635%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::sqr_in_place (13 samples, 0.01%)</title><rect x="68.1549%" y="117" width="0.0102%" height="15" fill="rgb(244,64,35)" fg:x="87132" fg:w="13"/><text x="68.4049%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::add_ge_var_in_place (48 samples, 0.04%)</title><rect x="68.1651%" y="117" width="0.0375%" height="15" fill="rgb(216,46,15)" fg:x="87145" fg:w="48"/><text x="68.4151%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::add_zinv_var_in_place (187 samples, 0.15%)</title><rect x="68.2027%" y="117" width="0.1463%" height="15" fill="rgb(250,74,19)" fg:x="87193" fg:w="187"/><text x="68.4527%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::group::Jacobian::double_var_in_place (572 samples, 0.45%)</title><rect x="68.3489%" y="117" width="0.4474%" height="15" fill="rgb(249,42,33)" fg:x="87380" fg:w="572"/><text x="68.5989%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::check_overflow (327 samples, 0.26%)</title><rect x="71.4903%" y="69" width="0.2558%" height="15" fill="rgb(242,149,17)" fg:x="91396" fg:w="327"/><text x="71.7403%" y="79.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::reduce_512 (1,853 samples, 1.45%)</title><rect x="70.7198%" y="85" width="1.4494%" height="15" fill="rgb(244,29,21)" fg:x="90411" fg:w="1853"/><text x="70.9698%" y="95.50"></text></g><g><title>dkn-compute`subtle::black_box (541 samples, 0.42%)</title><rect x="71.7460%" y="69" width="0.4232%" height="15" fill="rgb(220,130,37)" fg:x="91723" fg:w="541"/><text x="71.9960%" y="79.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::mul_in_place (4,016 samples, 3.14%)</title><rect x="69.0936%" y="101" width="3.1413%" height="15" fill="rgb(211,67,2)" fg:x="88332" fg:w="4016"/><text x="69.3436%" y="111.50">dkn..</text></g><g><title>dkn-compute`subtle::black_box (84 samples, 0.07%)</title><rect x="72.1692%" y="85" width="0.0657%" height="15" fill="rgb(235,68,52)" fg:x="92264" fg:w="84"/><text x="72.4192%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::reduce_512 (774 samples, 0.61%)</title><rect x="72.2349%" y="101" width="0.6054%" height="15" fill="rgb(246,142,3)" fg:x="92348" fg:w="774"/><text x="72.4849%" y="111.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::check_overflow (92 samples, 0.07%)</title><rect x="83.6121%" y="85" width="0.0720%" height="15" fill="rgb(241,25,7)" fg:x="106893" fg:w="92"/><text x="83.8621%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::check_overflow (2,233 samples, 1.75%)</title><rect x="88.9506%" y="69" width="1.7467%" height="15" fill="rgb(242,119,39)" fg:x="113718" fg:w="2233"/><text x="89.2006%" y="79.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::reduce_512 (12,673 samples, 9.91%)</title><rect x="83.6840%" y="85" width="9.9129%" height="15" fill="rgb(241,98,45)" fg:x="106985" fg:w="12673"/><text x="83.9340%" y="95.50">dkn-compute`li..</text></g><g><title>dkn-compute`subtle::black_box (3,707 samples, 2.90%)</title><rect x="90.6973%" y="69" width="2.8996%" height="15" fill="rgb(254,28,30)" fg:x="115951" fg:w="3707"/><text x="90.9473%" y="79.50">dk..</text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::inv_in_place (32,442 samples, 25.38%)</title><rect x="68.7979%" y="117" width="25.3762%" height="15" fill="rgb(241,142,54)" fg:x="87954" fg:w="32442"/><text x="69.0479%" y="127.50">dkn-compute`libsecp256k1_core::scalar::Sc..</text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::sqr_in_place (27,274 samples, 21.33%)</title><rect x="72.8403%" y="101" width="21.3338%" height="15" fill="rgb(222,85,15)" fg:x="93122" fg:w="27274"/><text x="73.0903%" y="111.50">dkn-compute`libsecp256k1_core::sca..</text></g><g><title>dkn-compute`subtle::black_box (738 samples, 0.58%)</title><rect x="93.5969%" y="85" width="0.5773%" height="15" fill="rgb(210,85,47)" fg:x="119658" fg:w="738"/><text x="93.8469%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::check_overflow (26 samples, 0.02%)</title><rect x="94.3744%" y="85" width="0.0203%" height="15" fill="rgb(224,206,25)" fg:x="120652" fg:w="26"/><text x="94.6244%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::reduce_512 (108 samples, 0.08%)</title><rect x="94.3384%" y="101" width="0.0845%" height="15" fill="rgb(243,201,19)" fg:x="120606" fg:w="108"/><text x="94.5884%" y="111.50"></text></g><g><title>dkn-compute`subtle::black_box (36 samples, 0.03%)</title><rect x="94.3947%" y="85" width="0.0282%" height="15" fill="rgb(236,59,4)" fg:x="120678" fg:w="36"/><text x="94.6447%" y="95.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::mul_in_place (326 samples, 0.25%)</title><rect x="94.1741%" y="117" width="0.2550%" height="15" fill="rgb(254,179,45)" fg:x="120396" fg:w="326"/><text x="94.4241%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::scalar::Scalar::sqr_in_place (646 samples, 0.51%)</title><rect x="94.4346%" y="117" width="0.5053%" height="15" fill="rgb(226,14,10)" fg:x="120729" fg:w="646"/><text x="94.6846%" y="127.50"></text></g><g><title>dkn-compute`libsecp256k1_core::ecdsa::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::verify_raw (101,258 samples, 79.20%)</title><rect x="15.7559%" y="133" width="79.2043%" height="15" fill="rgb(244,27,41)" fg:x="20143" fg:w="101258"/><text x="16.0059%" y="143.50">dkn-compute`libsecp256k1_core::ecdsa::_&lt;impl libsecp256k1_core::ecmult::ECMultContext&gt;::verify_raw</text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.02%)</title><rect x="94.9446%" y="117" width="0.0156%" height="15" fill="rgb(235,35,32)" fg:x="121381" fg:w="20"/><text x="95.1946%" y="127.50"></text></g><g><title>dkn-compute`sha2::sha256::compress256 (1,338 samples, 1.05%)</title><rect x="94.9783%" y="133" width="1.0466%" height="15" fill="rgb(218,68,31)" fg:x="121424" fg:w="1338"/><text x="95.2283%" y="143.50"></text></g><g><title>dkn-compute`libp2p_identity::keypair::PublicKey::verify (102,815 samples, 80.42%)</title><rect x="15.6096%" y="149" width="80.4222%" height="15" fill="rgb(207,120,37)" fg:x="19956" fg:w="102815"/><text x="15.8596%" y="159.50">dkn-compute`libp2p_identity::keypair::PublicKey::verify</text></g><g><title>dkn-compute`multihash::multihash::Multihash&lt;_&gt;::from_bytes (30 samples, 0.02%)</title><rect x="96.0381%" y="133" width="0.0235%" height="15" fill="rgb(227,98,0)" fg:x="122779" fg:w="30"/><text x="96.2881%" y="143.50"></text></g><g><title>dkn-compute`libp2p_identity::peer_id::PeerId::from_bytes (51 samples, 0.04%)</title><rect x="96.0319%" y="149" width="0.0399%" height="15" fill="rgb(207,7,3)" fg:x="122771" fg:w="51"/><text x="96.2819%" y="159.50"></text></g><g><title>dkn-compute`libsecp256k1_core::field::Field::normalize_var (25 samples, 0.02%)</title><rect x="96.0945%" y="117" width="0.0196%" height="15" fill="rgb(206,98,19)" fg:x="122851" fg:w="25"/><text x="96.3445%" y="127.50"></text></g><g><title>dkn-compute`libp2p_identity::keypair::PublicKey::encode_protobuf (60 samples, 0.05%)</title><rect x="96.0773%" y="133" width="0.0469%" height="15" fill="rgb(217,5,26)" fg:x="122829" fg:w="60"/><text x="96.3273%" y="143.50"></text></g><g><title>dkn-compute`libp2p_identity::peer_id::PeerId::from_public_key (76 samples, 0.06%)</title><rect x="96.0718%" y="149" width="0.0594%" height="15" fill="rgb(235,190,38)" fg:x="122822" fg:w="76"/><text x="96.3218%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (15 samples, 0.01%)</title><rect x="96.1602%" y="69" width="0.0117%" height="15" fill="rgb(247,86,24)" fg:x="122935" fg:w="15"/><text x="96.4102%" y="79.50"></text></g><g><title>dkn-compute`alloc::raw_vec::finish_grow (34 samples, 0.03%)</title><rect x="96.1469%" y="117" width="0.0266%" height="15" fill="rgb(205,101,16)" fg:x="122918" fg:w="34"/><text x="96.3969%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (29 samples, 0.02%)</title><rect x="96.1508%" y="101" width="0.0227%" height="15" fill="rgb(246,168,33)" fg:x="122923" fg:w="29"/><text x="96.4008%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (24 samples, 0.02%)</title><rect x="96.1547%" y="85" width="0.0188%" height="15" fill="rgb(231,114,1)" fg:x="122928" fg:w="24"/><text x="96.4047%" y="95.50"></text></g><g><title>dkn-compute`multihash::multihash::Multihash&lt;_&gt;::to_bytes (44 samples, 0.03%)</title><rect x="96.1406%" y="149" width="0.0344%" height="15" fill="rgb(207,184,53)" fg:x="122910" fg:w="44"/><text x="96.3906%" y="159.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.03%)</title><rect x="96.1445%" y="133" width="0.0305%" height="15" fill="rgb(224,95,51)" fg:x="122915" fg:w="39"/><text x="96.3945%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (51 samples, 0.04%)</title><rect x="96.1852%" y="149" width="0.0399%" height="15" fill="rgb(212,188,45)" fg:x="122967" fg:w="51"/><text x="96.4352%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.01%)</title><rect x="96.2282%" y="149" width="0.0125%" height="15" fill="rgb(223,154,38)" fg:x="123022" fg:w="16"/><text x="96.4782%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (83 samples, 0.06%)</title><rect x="96.2431%" y="149" width="0.0649%" height="15" fill="rgb(251,22,52)" fg:x="123041" fg:w="83"/><text x="96.4931%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (52 samples, 0.04%)</title><rect x="96.2673%" y="133" width="0.0407%" height="15" fill="rgb(229,209,22)" fg:x="123072" fg:w="52"/><text x="96.5173%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="96.3088%" y="149" width="0.0102%" height="15" fill="rgb(234,138,34)" fg:x="123125" fg:w="13"/><text x="96.5588%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.01%)</title><rect x="96.3330%" y="117" width="0.0110%" height="15" fill="rgb(212,95,11)" fg:x="123156" fg:w="14"/><text x="96.5830%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (55 samples, 0.04%)</title><rect x="96.3440%" y="117" width="0.0430%" height="15" fill="rgb(240,179,47)" fg:x="123170" fg:w="55"/><text x="96.5940%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="96.3729%" y="101" width="0.0141%" height="15" fill="rgb(240,163,11)" fg:x="123207" fg:w="18"/><text x="96.6229%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (88 samples, 0.07%)</title><rect x="96.3190%" y="149" width="0.0688%" height="15" fill="rgb(236,37,12)" fg:x="123138" fg:w="88"/><text x="96.5690%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (85 samples, 0.07%)</title><rect x="96.3213%" y="133" width="0.0665%" height="15" fill="rgb(232,164,16)" fg:x="123141" fg:w="85"/><text x="96.5713%" y="143.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::protocol::GossipsubCodec as asynchronous_codec::decoder::Decoder&gt;::decode (109,689 samples, 85.80%)</title><rect x="10.6176%" y="165" width="85.7991%" height="15" fill="rgb(244,205,15)" fg:x="13574" fg:w="109689"/><text x="10.8676%" y="175.50">dkn-compute`&lt;libp2p_gossipsub::protocol::GossipsubCodec as asynchronous_codec::decoder::Decoder&gt;::decode</text></g><g><title>libsystem_platform.dylib`_platform_memset (23 samples, 0.02%)</title><rect x="96.3987%" y="149" width="0.0180%" height="15" fill="rgb(223,117,47)" fg:x="123240" fg:w="23"/><text x="96.6487%" y="159.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (28 samples, 0.02%)</title><rect x="96.4363%" y="133" width="0.0219%" height="15" fill="rgb(244,107,35)" fg:x="123288" fg:w="28"/><text x="96.6863%" y="143.50"></text></g><g><title>dkn-compute`yamux::connection::stream::Stream::send_window_update (17 samples, 0.01%)</title><rect x="96.4582%" y="133" width="0.0133%" height="15" fill="rgb(205,140,8)" fg:x="123316" fg:w="17"/><text x="96.7082%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.03%)</title><rect x="96.4746%" y="133" width="0.0305%" height="15" fill="rgb(228,84,46)" fg:x="123337" fg:w="39"/><text x="96.7246%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.02%)</title><rect x="96.4840%" y="117" width="0.0211%" height="15" fill="rgb(254,188,9)" fg:x="123349" fg:w="27"/><text x="96.7340%" y="127.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncRead&gt;::poll_read (121 samples, 0.09%)</title><rect x="96.4175%" y="149" width="0.0946%" height="15" fill="rgb(206,112,54)" fg:x="123264" fg:w="121"/><text x="96.6675%" y="159.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::stream::Stream as futures_io::if_std::AsyncRead&gt;::poll_read (148 samples, 0.12%)</title><rect x="96.4175%" y="165" width="0.1158%" height="15" fill="rgb(216,84,49)" fg:x="123264" fg:w="148"/><text x="96.6675%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.02%)</title><rect x="96.5755%" y="165" width="0.0164%" height="15" fill="rgb(214,194,35)" fg:x="123466" fg:w="21"/><text x="96.8255%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.02%)</title><rect x="96.5935%" y="165" width="0.0242%" height="15" fill="rgb(249,28,3)" fg:x="123489" fg:w="31"/><text x="96.8435%" y="175.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (110,018 samples, 86.06%)</title><rect x="10.5989%" y="181" width="86.0564%" height="15" fill="rgb(222,56,52)" fg:x="13550" fg:w="110018"/><text x="10.8489%" y="191.50">dkn-compute`&lt;asynchronous_codec::framed_read::FramedRead2&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next</text></g><g><title>libsystem_platform.dylib`_platform_memmove (40 samples, 0.03%)</title><rect x="96.6240%" y="165" width="0.0313%" height="15" fill="rgb(245,217,50)" fg:x="123528" fg:w="40"/><text x="96.8740%" y="175.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (19 samples, 0.01%)</title><rect x="96.6647%" y="149" width="0.0149%" height="15" fill="rgb(213,201,24)" fg:x="123580" fg:w="19"/><text x="96.9147%" y="159.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_flush (28 samples, 0.02%)</title><rect x="96.6631%" y="165" width="0.0219%" height="15" fill="rgb(248,116,28)" fg:x="123578" fg:w="28"/><text x="96.9131%" y="175.50"></text></g><g><title>dkn-compute`&lt;yamux::connection::stream::Stream as futures_io::if_std::AsyncWrite&gt;::poll_write (53 samples, 0.04%)</title><rect x="96.6850%" y="165" width="0.0415%" height="15" fill="rgb(219,72,43)" fg:x="123606" fg:w="53"/><text x="96.9350%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="96.7077%" y="149" width="0.0188%" height="15" fill="rgb(209,138,14)" fg:x="123635" fg:w="24"/><text x="96.9577%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.02%)</title><rect x="96.7093%" y="133" width="0.0172%" height="15" fill="rgb(222,18,33)" fg:x="123637" fg:w="22"/><text x="96.9593%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.01%)</title><rect x="96.7163%" y="117" width="0.0102%" height="15" fill="rgb(213,199,7)" fg:x="123646" fg:w="13"/><text x="96.9663%" y="127.50"></text></g><g><title>dkn-compute`&lt;asynchronous_codec::framed_write::FramedWrite2&lt;T&gt; as futures_sink::Sink&lt;&lt;T as asynchronous_codec::encoder::Encoder&gt;::Item&gt;&gt;::poll_flush (102 samples, 0.08%)</title><rect x="96.6553%" y="181" width="0.0798%" height="15" fill="rgb(250,110,10)" fg:x="123568" fg:w="102"/><text x="96.9053%" y="191.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::BytesMutWriterBackend as quick_protobuf::writer::WriterBackend&gt;::pb_write_all (26 samples, 0.02%)</title><rect x="96.7805%" y="133" width="0.0203%" height="15" fill="rgb(248,123,6)" fg:x="123728" fg:w="26"/><text x="97.0305%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.02%)</title><rect x="96.7851%" y="117" width="0.0156%" height="15" fill="rgb(206,91,31)" fg:x="123734" fg:w="20"/><text x="97.0351%" y="127.50"></text></g><g><title>dkn-compute`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (16 samples, 0.01%)</title><rect x="96.8243%" y="101" width="0.0125%" height="15" fill="rgb(211,154,13)" fg:x="123784" fg:w="16"/><text x="97.0743%" y="111.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message as quick_protobuf::message::MessageWrite&gt;::write_message (97 samples, 0.08%)</title><rect x="96.7711%" y="149" width="0.0759%" height="15" fill="rgb(225,148,7)" fg:x="123716" fg:w="97"/><text x="97.0211%" y="159.50"></text></g><g><title>dkn-compute`quick_protobuf::writer::Writer&lt;W&gt;::write_with_tag (57 samples, 0.04%)</title><rect x="96.8024%" y="133" width="0.0446%" height="15" fill="rgb(220,160,43)" fg:x="123756" fg:w="57"/><text x="97.0524%" y="143.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::BytesMutWriterBackend as quick_protobuf::writer::WriterBackend&gt;::pb_write_u8 (34 samples, 0.03%)</title><rect x="96.8203%" y="117" width="0.0266%" height="15" fill="rgb(213,52,39)" fg:x="123779" fg:w="34"/><text x="97.0703%" y="127.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC as quick_protobuf::message::MessageWrite&gt;::write_message (129 samples, 0.10%)</title><rect x="96.7632%" y="165" width="0.1009%" height="15" fill="rgb(243,137,7)" fg:x="123706" fg:w="129"/><text x="97.0132%" y="175.50"></text></g><g><title>dkn-compute`quick_protobuf::writer::Writer&lt;W&gt;::write_with_tag (20 samples, 0.02%)</title><rect x="96.8485%" y="149" width="0.0156%" height="15" fill="rgb(230,79,13)" fg:x="123815" fg:w="20"/><text x="97.0985%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.01%)</title><rect x="96.8759%" y="133" width="0.0141%" height="15" fill="rgb(247,105,23)" fg:x="123850" fg:w="18"/><text x="97.1259%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.02%)</title><rect x="96.8923%" y="133" width="0.0227%" height="15" fill="rgb(223,179,41)" fg:x="123871" fg:w="29"/><text x="97.1423%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.02%)</title><rect x="96.8993%" y="117" width="0.0156%" height="15" fill="rgb(218,9,34)" fg:x="123880" fg:w="20"/><text x="97.1493%" y="127.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message&gt; (56 samples, 0.04%)</title><rect x="96.8735%" y="149" width="0.0438%" height="15" fill="rgb(222,106,8)" fg:x="123847" fg:w="56"/><text x="97.1235%" y="159.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place&lt;libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC&gt; (73 samples, 0.06%)</title><rect x="96.8704%" y="165" width="0.0571%" height="15" fill="rgb(211,220,0)" fg:x="123843" fg:w="73"/><text x="97.1204%" y="175.50"></text></g><g><title>dkn-compute`&lt;quick_protobuf_codec::Codec&lt;In,Out&gt; as asynchronous_codec::encoder::Encoder&gt;::encode (228 samples, 0.18%)</title><rect x="96.7523%" y="181" width="0.1783%" height="15" fill="rgb(229,52,16)" fg:x="123692" fg:w="228"/><text x="97.0023%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (51 samples, 0.04%)</title><rect x="96.9518%" y="165" width="0.0399%" height="15" fill="rgb(212,155,18)" fg:x="123947" fg:w="51"/><text x="97.2018%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (39 samples, 0.03%)</title><rect x="96.9611%" y="149" width="0.0305%" height="15" fill="rgb(242,21,14)" fg:x="123959" fg:w="39"/><text x="97.2111%" y="159.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (53 samples, 0.04%)</title><rect x="96.9518%" y="181" width="0.0415%" height="15" fill="rgb(222,19,48)" fg:x="123947" fg:w="53"/><text x="97.2018%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.03%)</title><rect x="96.9956%" y="181" width="0.0336%" height="15" fill="rgb(232,45,27)" fg:x="124003" fg:w="43"/><text x="97.2456%" y="191.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::handler::EnabledHandler::poll (110,763 samples, 86.64%)</title><rect x="10.5449%" y="197" width="86.6392%" height="15" fill="rgb(249,103,42)" fg:x="13481" fg:w="110763"/><text x="10.7949%" y="207.50">dkn-compute`libp2p_gossipsub::handler::EnabledHandler::poll</text></g><g><title>libsystem_platform.dylib`_platform_memset (198 samples, 0.15%)</title><rect x="97.0292%" y="181" width="0.1549%" height="15" fill="rgb(246,81,33)" fg:x="124046" fg:w="198"/><text x="97.2792%" y="191.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (20 samples, 0.02%)</title><rect x="97.1872%" y="197" width="0.0156%" height="15" fill="rgb(252,33,42)" fg:x="124248" fg:w="20"/><text x="97.4372%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (110,856 samples, 86.71%)</title><rect x="10.5144%" y="213" width="86.7119%" height="15" fill="rgb(209,212,41)" fg:x="13442" fg:w="110856"/><text x="10.7644%" y="223.50">dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.02%)</title><rect x="97.2107%" y="197" width="0.0156%" height="15" fill="rgb(207,154,6)" fg:x="124278" fg:w="20"/><text x="97.4607%" y="207.50"></text></g><g><title>dkn-compute`futures_bounded::futures_map::FuturesMap&lt;ID,O&gt;::poll_unpin (16 samples, 0.01%)</title><rect x="97.2537%" y="197" width="0.0125%" height="15" fill="rgb(223,64,47)" fg:x="124333" fg:w="16"/><text x="97.5037%" y="207.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (16 samples, 0.01%)</title><rect x="97.2811%" y="197" width="0.0125%" height="15" fill="rgb(211,161,38)" fg:x="124368" fg:w="16"/><text x="97.5311%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_identify::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (91 samples, 0.07%)</title><rect x="97.2263%" y="213" width="0.0712%" height="15" fill="rgb(219,138,40)" fg:x="124298" fg:w="91"/><text x="97.4763%" y="223.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.02%)</title><rect x="97.3241%" y="181" width="0.0180%" height="15" fill="rgb(241,228,46)" fg:x="124423" fg:w="23"/><text x="97.5741%" y="191.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::select_all::SelectAll&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (31 samples, 0.02%)</title><rect x="97.3186%" y="197" width="0.0242%" height="15" fill="rgb(223,209,38)" fg:x="124416" fg:w="31"/><text x="97.5686%" y="207.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (36 samples, 0.03%)</title><rect x="97.3468%" y="197" width="0.0282%" height="15" fill="rgb(236,164,45)" fg:x="124452" fg:w="36"/><text x="97.5968%" y="207.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.03%)</title><rect x="97.3491%" y="181" width="0.0258%" height="15" fill="rgb(231,15,5)" fg:x="124455" fg:w="33"/><text x="97.5991%" y="191.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (18 samples, 0.01%)</title><rect x="97.3827%" y="197" width="0.0141%" height="15" fill="rgb(252,35,15)" fg:x="124498" fg:w="18"/><text x="97.6327%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_kad::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (140 samples, 0.11%)</title><rect x="97.2975%" y="213" width="0.1095%" height="15" fill="rgb(248,181,18)" fg:x="124389" fg:w="140"/><text x="97.5475%" y="223.50"></text></g><g><title>dkn-compute`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (17 samples, 0.01%)</title><rect x="97.4305%" y="197" width="0.0133%" height="15" fill="rgb(233,39,42)" fg:x="124559" fg:w="17"/><text x="97.6805%" y="207.50"></text></g><g><title>dkn-compute`&lt;libp2p_request_response::handler::Handler&lt;TCodec&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::poll (89 samples, 0.07%)</title><rect x="97.4078%" y="213" width="0.0696%" height="15" fill="rgb(238,110,33)" fg:x="124530" fg:w="89"/><text x="97.6578%" y="223.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (35 samples, 0.03%)</title><rect x="97.5345%" y="181" width="0.0274%" height="15" fill="rgb(233,195,10)" fg:x="124692" fg:w="35"/><text x="97.7845%" y="191.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (18 samples, 0.01%)</title><rect x="97.5478%" y="165" width="0.0141%" height="15" fill="rgb(254,105,3)" fg:x="124709" fg:w="18"/><text x="97.7978%" y="175.50"></text></g><g><title>dkn-compute`futures_bounded::futures_set::FuturesSet&lt;O&gt;::poll_unpin (44 samples, 0.03%)</title><rect x="97.5720%" y="181" width="0.0344%" height="15" fill="rgb(221,225,9)" fg:x="124740" fg:w="44"/><text x="97.8220%" y="191.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (32 samples, 0.03%)</title><rect x="97.5814%" y="165" width="0.0250%" height="15" fill="rgb(224,227,45)" fg:x="124752" fg:w="32"/><text x="97.8314%" y="175.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (24 samples, 0.02%)</title><rect x="97.5877%" y="149" width="0.0188%" height="15" fill="rgb(229,198,43)" fg:x="124760" fg:w="24"/><text x="97.8377%" y="159.50"></text></g><g><title>dkn-compute`futures_core::task::__internal::atomic_waker::AtomicWaker::register (36 samples, 0.03%)</title><rect x="97.6417%" y="149" width="0.0282%" height="15" fill="rgb(206,209,35)" fg:x="124829" fg:w="36"/><text x="97.8917%" y="159.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (81 samples, 0.06%)</title><rect x="97.6143%" y="165" width="0.0634%" height="15" fill="rgb(245,195,53)" fg:x="124794" fg:w="81"/><text x="97.8643%" y="175.50"></text></g><g><title>dkn-compute`futures_bounded::futures_tuple_set::FuturesTupleSet&lt;O,D&gt;::poll_unpin (97 samples, 0.08%)</title><rect x="97.6065%" y="181" width="0.0759%" height="15" fill="rgb(240,92,26)" fg:x="124784" fg:w="97"/><text x="97.8565%" y="191.50"></text></g><g><title>dkn-compute`tokio::runtime::task::waker::drop_waker (33 samples, 0.03%)</title><rect x="97.6909%" y="181" width="0.0258%" height="15" fill="rgb(207,40,23)" fg:x="124892" fg:w="33"/><text x="97.9409%" y="191.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (18 samples, 0.01%)</title><rect x="97.7167%" y="181" width="0.0141%" height="15" fill="rgb(223,111,35)" fg:x="124925" fg:w="18"/><text x="97.9667%" y="191.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (18 samples, 0.01%)</title><rect x="97.7308%" y="181" width="0.0141%" height="15" fill="rgb(229,147,28)" fg:x="124943" fg:w="18"/><text x="97.9808%" y="191.50"></text></g><g><title>dkn-compute`&lt;libp2p_relay::priv_client::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::poll (326 samples, 0.25%)</title><rect x="97.4993%" y="197" width="0.2550%" height="15" fill="rgb(211,29,28)" fg:x="124647" fg:w="326"/><text x="97.7493%" y="207.50"></text></g><g><title>dkn-compute`libp2p_swarm::handler::either::_&lt;impl libp2p_swarm::handler::ConnectionHandler for either::Either&lt;L,R&gt;&gt;::poll (365 samples, 0.29%)</title><rect x="97.4923%" y="213" width="0.2855%" height="15" fill="rgb(228,72,33)" fg:x="124638" fg:w="365"/><text x="97.7423%" y="223.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::poll (111,623 samples, 87.31%)</title><rect x="10.4839%" y="229" width="87.3119%" height="15" fill="rgb(205,214,31)" fg:x="13403" fg:w="111623"/><text x="10.7339%" y="239.50">dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::poll</text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::UpgradeInfoSend&gt;::protocol_info (24 samples, 0.02%)</title><rect x="97.8435%" y="197" width="0.0188%" height="15" fill="rgb(224,111,15)" fg:x="125087" fg:w="24"/><text x="98.0935%" y="207.50"></text></g><g><title>dkn-compute`&lt;T as libp2p_swarm::upgrade::UpgradeInfoSend&gt;::protocol_info (48 samples, 0.04%)</title><rect x="97.8278%" y="213" width="0.0375%" height="15" fill="rgb(253,21,26)" fg:x="125067" fg:w="48"/><text x="98.0778%" y="223.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (42 samples, 0.03%)</title><rect x="97.9686%" y="69" width="0.0329%" height="15" fill="rgb(245,139,43)" fg:x="125247" fg:w="42"/><text x="98.2186%" y="79.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (99 samples, 0.08%)</title><rect x="97.9522%" y="85" width="0.0774%" height="15" fill="rgb(252,170,7)" fg:x="125226" fg:w="99"/><text x="98.2022%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (18 samples, 0.01%)</title><rect x="98.0437%" y="69" width="0.0141%" height="15" fill="rgb(231,118,14)" fg:x="125343" fg:w="18"/><text x="98.2937%" y="79.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (36 samples, 0.03%)</title><rect x="98.0320%" y="85" width="0.0282%" height="15" fill="rgb(238,83,0)" fg:x="125328" fg:w="36"/><text x="98.2820%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="98.0601%" y="85" width="0.0141%" height="15" fill="rgb(221,39,39)" fg:x="125364" fg:w="18"/><text x="98.3101%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.01%)</title><rect x="98.0805%" y="85" width="0.0110%" height="15" fill="rgb(222,119,46)" fg:x="125390" fg:w="14"/><text x="98.3305%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.02%)</title><rect x="98.0977%" y="85" width="0.0227%" height="15" fill="rgb(222,165,49)" fg:x="125412" fg:w="29"/><text x="98.3477%" y="95.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (259 samples, 0.20%)</title><rect x="97.9326%" y="101" width="0.2026%" height="15" fill="rgb(219,113,52)" fg:x="125201" fg:w="259"/><text x="98.1826%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.01%)</title><rect x="98.1211%" y="85" width="0.0141%" height="15" fill="rgb(214,7,15)" fg:x="125442" fg:w="18"/><text x="98.3711%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.02%)</title><rect x="98.1556%" y="101" width="0.0203%" height="15" fill="rgb(235,32,4)" fg:x="125486" fg:w="26"/><text x="98.4056%" y="111.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (362 samples, 0.28%)</title><rect x="97.9037%" y="117" width="0.2832%" height="15" fill="rgb(238,90,54)" fg:x="125164" fg:w="362"/><text x="98.1537%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.01%)</title><rect x="98.1759%" y="101" width="0.0110%" height="15" fill="rgb(213,208,19)" fg:x="125512" fg:w="14"/><text x="98.4259%" y="111.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (384 samples, 0.30%)</title><rect x="97.8990%" y="133" width="0.3004%" height="15" fill="rgb(233,156,4)" fg:x="125158" fg:w="384"/><text x="98.1490%" y="143.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.01%)</title><rect x="98.2244%" y="85" width="0.0117%" height="15" fill="rgb(207,194,5)" fg:x="125574" fg:w="15"/><text x="98.4744%" y="95.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.03%)</title><rect x="98.2643%" y="69" width="0.0289%" height="15" fill="rgb(206,111,30)" fg:x="125625" fg:w="37"/><text x="98.5143%" y="79.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (14 samples, 0.01%)</title><rect x="98.2932%" y="69" width="0.0110%" height="15" fill="rgb(243,70,54)" fg:x="125662" fg:w="14"/><text x="98.5432%" y="79.50"></text></g><g><title>dkn-compute`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (89 samples, 0.07%)</title><rect x="98.2424%" y="85" width="0.0696%" height="15" fill="rgb(242,28,8)" fg:x="125597" fg:w="89"/><text x="98.4924%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.01%)</title><rect x="98.3175%" y="85" width="0.0141%" height="15" fill="rgb(219,106,18)" fg:x="125693" fg:w="18"/><text x="98.5675%" y="95.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (159 samples, 0.12%)</title><rect x="98.2088%" y="101" width="0.1244%" height="15" fill="rgb(244,222,10)" fg:x="125554" fg:w="159"/><text x="98.4588%" y="111.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (13 samples, 0.01%)</title><rect x="98.3339%" y="101" width="0.0102%" height="15" fill="rgb(236,179,52)" fg:x="125714" fg:w="13"/><text x="98.5839%" y="111.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (185 samples, 0.14%)</title><rect x="98.2072%" y="117" width="0.1447%" height="15" fill="rgb(213,23,39)" fg:x="125552" fg:w="185"/><text x="98.4572%" y="127.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (215 samples, 0.17%)</title><rect x="98.1994%" y="133" width="0.1682%" height="15" fill="rgb(238,48,10)" fg:x="125542" fg:w="215"/><text x="98.4494%" y="143.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="98.3949%" y="101" width="0.0211%" height="15" fill="rgb(251,196,23)" fg:x="125792" fg:w="27"/><text x="98.6449%" y="111.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (56 samples, 0.04%)</title><rect x="98.3801%" y="117" width="0.0438%" height="15" fill="rgb(250,152,24)" fg:x="125773" fg:w="56"/><text x="98.6301%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.01%)</title><rect x="98.4286%" y="101" width="0.0117%" height="15" fill="rgb(209,150,17)" fg:x="125835" fg:w="15"/><text x="98.6786%" y="111.50"></text></g><g><title>dkn-compute`libp2p_swarm::stream_protocol::StreamProtocol::try_from_owned (22 samples, 0.02%)</title><rect x="98.4239%" y="117" width="0.0172%" height="15" fill="rgb(234,202,34)" fg:x="125829" fg:w="22"/><text x="98.6739%" y="127.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (123 samples, 0.10%)</title><rect x="98.3707%" y="133" width="0.0962%" height="15" fill="rgb(253,148,53)" fg:x="125761" fg:w="123"/><text x="98.6207%" y="143.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (786 samples, 0.61%)</title><rect x="97.8779%" y="149" width="0.6148%" height="15" fill="rgb(218,129,16)" fg:x="125131" fg:w="786"/><text x="98.1279%" y="159.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (800 samples, 0.63%)</title><rect x="97.8732%" y="165" width="0.6258%" height="15" fill="rgb(216,85,19)" fg:x="125125" fg:w="800"/><text x="98.1232%" y="175.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.01%)</title><rect x="98.5138%" y="133" width="0.0125%" height="15" fill="rgb(235,228,7)" fg:x="125944" fg:w="16"/><text x="98.7638%" y="143.50"></text></g><g><title>dkn-compute`core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (44 samples, 0.03%)</title><rect x="98.5052%" y="149" width="0.0344%" height="15" fill="rgb(245,175,0)" fg:x="125933" fg:w="44"/><text x="98.7552%" y="159.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (66 samples, 0.05%)</title><rect x="98.4990%" y="165" width="0.0516%" height="15" fill="rgb(208,168,36)" fg:x="125925" fg:w="66"/><text x="98.7490%" y="175.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (878 samples, 0.69%)</title><rect x="97.8669%" y="181" width="0.6868%" height="15" fill="rgb(246,171,24)" fg:x="125117" fg:w="878"/><text x="98.1169%" y="191.50"></text></g><g><title>dkn-compute`&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (881 samples, 0.69%)</title><rect x="97.8654%" y="197" width="0.6891%" height="15" fill="rgb(215,142,24)" fg:x="125115" fg:w="881"/><text x="98.1154%" y="207.50"></text></g><g><title>dkn-compute`&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (888 samples, 0.69%)</title><rect x="97.8654%" y="213" width="0.6946%" height="15" fill="rgb(250,187,7)" fg:x="125115" fg:w="888"/><text x="98.1154%" y="223.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::listen_protocol (105 samples, 0.08%)</title><rect x="98.5678%" y="213" width="0.0821%" height="15" fill="rgb(228,66,33)" fg:x="126013" fg:w="105"/><text x="98.8178%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.01%)</title><rect x="98.6358%" y="197" width="0.0141%" height="15" fill="rgb(234,215,21)" fg:x="126100" fg:w="18"/><text x="98.8858%" y="207.50"></text></g><g><title>dkn-compute`core::ptr::drop_in_place$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..select..SelectUpgrade$LT$libp2p_swarm..upgrade..SendWrapper$LT$either..Either$LT$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..ready..ReadyUpgrade$LT$libp2p_swarm..stream_protocol..StreamProtocol$GT$$GT$$C$libp2p_swarm..upgrade..SendWrapper$LT$libp2p_core..upgrade..denied..DeniedUpgrade$GT$$GT$$GT$$C$libp2p_swarm..upgrade..SendWrapper$LT$either..Either$LT$libp2p_gossipsub..protocol..ProtocolConfig$C$libp2p_core..upgrade..denied..DeniedUpgrade$GT$$GT$$GT$$GT$$C$libp2p_swarm..upgrade..SendWrapper$LT$either..Either$LT$libp2p_kad..protocol..ProtocolConfig$C$libp2p_core..upgrade..denied..DeniedUpgrade$GT$$GT$$GT$$GT$$� (29 samples, 0.02%)</title><rect x="98.6570%" y="213" width="0.0227%" height="15" fill="rgb(222,191,20)" fg:x="126127" fg:w="29"/><text x="98.9070%" y="223.50"></text></g><g><title>dkn-compute`libp2p_swarm::connection::gather_supported_protocols (1,111 samples, 0.87%)</title><rect x="97.8208%" y="229" width="0.8690%" height="15" fill="rgb(245,79,54)" fg:x="125058" fg:w="1111"/><text x="98.0708%" y="239.50"></text></g><g><title>dkn-compute`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (102 samples, 0.08%)</title><rect x="98.7305%" y="197" width="0.0798%" height="15" fill="rgb(240,10,37)" fg:x="126221" fg:w="102"/><text x="98.9805%" y="207.50"></text></g><g><title>dkn-compute`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (160 samples, 0.13%)</title><rect x="98.7023%" y="213" width="0.1252%" height="15" fill="rgb(214,192,32)" fg:x="126185" fg:w="160"/><text x="98.9523%" y="223.50"></text></g><g><title>dkn-compute`core::hash::BuildHasher::hash_one (22 samples, 0.02%)</title><rect x="98.8103%" y="197" width="0.0172%" height="15" fill="rgb(209,36,54)" fg:x="126323" fg:w="22"/><text x="99.0603%" y="207.50"></text></g><g><title>dkn-compute`libp2p_swarm::handler::ProtocolsChange::from_full_sets (241 samples, 0.19%)</title><rect x="98.6898%" y="229" width="0.1885%" height="15" fill="rgb(220,10,11)" fg:x="126169" fg:w="241"/><text x="98.9398%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (65 samples, 0.05%)</title><rect x="98.8275%" y="213" width="0.0508%" height="15" fill="rgb(221,106,17)" fg:x="126345" fg:w="65"/><text x="99.0775%" y="223.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (16 samples, 0.01%)</title><rect x="98.8807%" y="229" width="0.0125%" height="15" fill="rgb(251,142,44)" fg:x="126413" fg:w="16"/><text x="99.1307%" y="239.50"></text></g><g><title>dkn-compute`tracing::span::Span::record_all (14 samples, 0.01%)</title><rect x="98.8932%" y="229" width="0.0110%" height="15" fill="rgb(238,13,15)" fg:x="126429" fg:w="14"/><text x="99.1432%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (51 samples, 0.04%)</title><rect x="98.9127%" y="229" width="0.0399%" height="15" fill="rgb(208,107,27)" fg:x="126454" fg:w="51"/><text x="99.1627%" y="239.50"></text></g><g><title>dkn-compute`futures_util::future::future::FutureExt::poll_unpin (117,518 samples, 91.92%)</title><rect x="7.0649%" y="245" width="91.9230%" height="15" fill="rgb(205,136,37)" fg:x="9032" fg:w="117518"/><text x="7.3149%" y="255.50">dkn-compute`futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.03%)</title><rect x="98.9597%" y="229" width="0.0282%" height="15" fill="rgb(250,205,27)" fg:x="126514" fg:w="36"/><text x="99.2097%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.01%)</title><rect x="99.0723%" y="197" width="0.0117%" height="15" fill="rgb(210,80,43)" fg:x="126658" fg:w="15"/><text x="99.3223%" y="207.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (77 samples, 0.06%)</title><rect x="99.0269%" y="213" width="0.0602%" height="15" fill="rgb(247,160,36)" fg:x="126600" fg:w="77"/><text x="99.2769%" y="223.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (116 samples, 0.09%)</title><rect x="99.0027%" y="229" width="0.0907%" height="15" fill="rgb(234,13,49)" fg:x="126569" fg:w="116"/><text x="99.2527%" y="239.50"></text></g><g><title>dkn-compute`futures_util::stream::stream::StreamExt::poll_next_unpin (152 samples, 0.12%)</title><rect x="98.9878%" y="245" width="0.1189%" height="15" fill="rgb(234,122,0)" fg:x="126550" fg:w="152"/><text x="99.2378%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.02%)</title><rect x="99.1185%" y="245" width="0.0180%" height="15" fill="rgb(207,146,38)" fg:x="126717" fg:w="23"/><text x="99.3685%" y="255.50"></text></g><g><title>dkn-compute`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (117,900 samples, 92.22%)</title><rect x="6.9186%" y="261" width="92.2218%" height="15" fill="rgb(207,177,25)" fg:x="8845" fg:w="117900"/><text x="7.1686%" y="271.50">dkn-compute`&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (39 samples, 0.03%)</title><rect x="99.1928%" y="133" width="0.0305%" height="15" fill="rgb(211,178,42)" fg:x="126812" fg:w="39"/><text x="99.4428%" y="143.50"></text></g><g><title>dkn-compute`std::sys::pal::unix::time::Timespec::now (44 samples, 0.03%)</title><rect x="99.1896%" y="165" width="0.0344%" height="15" fill="rgb(230,69,54)" fg:x="126808" fg:w="44"/><text x="99.4396%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (44 samples, 0.03%)</title><rect x="99.1896%" y="149" width="0.0344%" height="15" fill="rgb(214,135,41)" fg:x="126808" fg:w="44"/><text x="99.4396%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (548 samples, 0.43%)</title><rect x="99.2264%" y="165" width="0.4286%" height="15" fill="rgb(237,67,25)" fg:x="126855" fg:w="548"/><text x="99.4764%" y="175.50"></text></g><g><title>dkn-compute`parking_lot::condvar::Condvar::notify_one_slow (629 samples, 0.49%)</title><rect x="99.1748%" y="181" width="0.4920%" height="15" fill="rgb(222,189,50)" fg:x="126789" fg:w="629"/><text x="99.4248%" y="191.50"></text></g><g><title>dkn-compute`&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (654 samples, 0.51%)</title><rect x="99.1583%" y="213" width="0.5116%" height="15" fill="rgb(245,148,34)" fg:x="126768" fg:w="654"/><text x="99.4083%" y="223.50"></text></g><g><title>dkn-compute`tokio::runtime::park::wake (643 samples, 0.50%)</title><rect x="99.1670%" y="197" width="0.5030%" height="15" fill="rgb(222,29,6)" fg:x="126779" fg:w="643"/><text x="99.4170%" y="207.50"></text></g><g><title>dkn-compute`futures_task::waker::wake_arc_raw (659 samples, 0.52%)</title><rect x="99.1568%" y="229" width="0.5155%" height="15" fill="rgb(221,189,43)" fg:x="126766" fg:w="659"/><text x="99.4068%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="99.6723%" y="229" width="0.0188%" height="15" fill="rgb(207,36,27)" fg:x="127425" fg:w="24"/><text x="99.9223%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.02%)</title><rect x="99.6738%" y="213" width="0.0172%" height="15" fill="rgb(217,90,24)" fg:x="127427" fg:w="22"/><text x="99.9238%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.01%)</title><rect x="99.6801%" y="197" width="0.0110%" height="15" fill="rgb(224,66,35)" fg:x="127435" fg:w="14"/><text x="99.9301%" y="207.50"></text></g><g><title>dkn-compute`futures_channel::mpsc::sink_impl::_&lt;impl futures_sink::Sink&lt;T&gt; for futures_channel::mpsc::Sender&lt;T&gt;&gt;::start_send (691 samples, 0.54%)</title><rect x="99.1513%" y="245" width="0.5405%" height="15" fill="rgb(221,13,50)" fg:x="126759" fg:w="691"/><text x="99.4013%" y="255.50"></text></g><g><title>dkn-compute`&lt;futures_util::sink::send::Send&lt;Si,Item&gt; as core::future::future::Future&gt;::poll (742 samples, 0.58%)</title><rect x="99.1404%" y="261" width="0.5804%" height="15" fill="rgb(236,68,49)" fg:x="126745" fg:w="742"/><text x="99.3904%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (24 samples, 0.02%)</title><rect x="99.7020%" y="245" width="0.0188%" height="15" fill="rgb(229,146,28)" fg:x="127463" fg:w="24"/><text x="99.9520%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.02%)</title><rect x="99.7739%" y="117" width="0.0172%" height="15" fill="rgb(225,31,38)" fg:x="127555" fg:w="22"/><text x="100.0239%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (44 samples, 0.03%)</title><rect x="99.7724%" y="133" width="0.0344%" height="15" fill="rgb(250,208,3)" fg:x="127553" fg:w="44"/><text x="100.0224%" y="143.50"></text></g><g><title>dkn-compute`alloc::raw_vec::finish_grow (58 samples, 0.05%)</title><rect x="99.7646%" y="165" width="0.0454%" height="15" fill="rgb(246,54,23)" fg:x="127543" fg:w="58"/><text x="100.0146%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (50 samples, 0.04%)</title><rect x="99.7708%" y="149" width="0.0391%" height="15" fill="rgb(243,76,11)" fg:x="127551" fg:w="50"/><text x="100.0208%" y="159.50"></text></g><g><title>dkn-compute`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (63 samples, 0.05%)</title><rect x="99.7622%" y="181" width="0.0493%" height="15" fill="rgb(245,21,50)" fg:x="127540" fg:w="63"/><text x="100.0122%" y="191.50"></text></g><g><title>dkn-compute`multihash::multihash::Multihash&lt;_&gt;::to_bytes (70 samples, 0.05%)</title><rect x="99.7575%" y="197" width="0.0548%" height="15" fill="rgb(228,9,43)" fg:x="127534" fg:w="70"/><text x="100.0075%" y="207.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::types::_&lt;impl core::convert::From&lt;libp2p_gossipsub::types::RawMessage&gt; for libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::Message&gt;::from (90 samples, 0.07%)</title><rect x="99.7536%" y="213" width="0.0704%" height="15" fill="rgb(208,100,47)" fg:x="127529" fg:w="90"/><text x="100.0036%" y="223.50"></text></g><g><title>dkn-compute`libp2p_gossipsub::types::_&lt;impl core::convert::From&lt;libp2p_gossipsub::types::RpcOut&gt; for libp2p_gossipsub::rpc_proto::proto::gossipsub::pb::RPC&gt;::from (123 samples, 0.10%)</title><rect x="99.7442%" y="229" width="0.0962%" height="15" fill="rgb(232,26,8)" fg:x="127517" fg:w="123"/><text x="99.9942%" y="239.50"></text></g><g><title>dkn-compute`&lt;libp2p_gossipsub::handler::Handler as libp2p_swarm::handler::ConnectionHandler&gt;::on_behaviour_event (155 samples, 0.12%)</title><rect x="99.7372%" y="245" width="0.1212%" height="15" fill="rgb(216,166,38)" fg:x="127508" fg:w="155"/><text x="99.9872%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.01%)</title><rect x="99.8475%" y="229" width="0.0110%" height="15" fill="rgb(251,202,51)" fg:x="127649" fg:w="14"/><text x="100.0975%" y="239.50"></text></g><g><title>dkn-compute`&lt;libp2p_swarm::handler::select::ConnectionHandlerSelect&lt;TProto1,TProto2&gt; as libp2p_swarm::handler::ConnectionHandler&gt;::on_behaviour_event (183 samples, 0.14%)</title><rect x="99.7301%" y="261" width="0.1431%" height="15" fill="rgb(254,216,34)" fg:x="127499" fg:w="183"/><text x="99.9801%" y="271.50"></text></g><g><title>dkn-compute`tracing::span::Span::log (16 samples, 0.01%)</title><rect x="99.8858%" y="261" width="0.0125%" height="15" fill="rgb(251,32,27)" fg:x="127698" fg:w="16"/><text x="100.1358%" y="271.50"></text></g><g><title>dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (118,919 samples, 93.02%)</title><rect x="6.8912%" y="277" width="93.0188%" height="15" fill="rgb(208,127,28)" fg:x="8810" fg:w="118919"/><text x="7.1412%" y="287.50">dkn-compute`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.01%)</title><rect x="99.8983%" y="261" width="0.0117%" height="15" fill="rgb(224,137,22)" fg:x="127714" fg:w="15"/><text x="100.1483%" y="271.50"></text></g><g><title>dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (118,974 samples, 93.06%)</title><rect x="6.8834%" y="293" width="93.0619%" height="15" fill="rgb(254,70,32)" fg:x="8800" fg:w="118974"/><text x="7.1334%" y="303.50">dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove (22 samples, 0.02%)</title><rect x="99.9280%" y="277" width="0.0172%" height="15" fill="rgb(229,75,37)" fg:x="127752" fg:w="22"/><text x="100.1780%" y="287.50"></text></g><g><title>dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (119,253 samples, 93.28%)</title><rect x="6.6824%" y="309" width="93.2801%" height="15" fill="rgb(252,64,23)" fg:x="8543" fg:w="119253"/><text x="6.9324%" y="319.50">dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (119,592 samples, 93.55%)</title><rect x="6.4211%" y="325" width="93.5453%" height="15" fill="rgb(232,162,48)" fg:x="8209" fg:w="119592"/><text x="6.6711%" y="335.50">dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run (122,254 samples, 95.63%)</title><rect x="4.3694%" y="341" width="95.6275%" height="15" fill="rgb(246,160,12)" fg:x="5586" fg:w="122254"/><text x="4.6194%" y="351.50">dkn-compute`tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>all (127,844 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(247,166,0)" fg:x="0" fg:w="127844"/><text x="0.2500%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (122,312 samples, 95.67%)</title><rect x="4.3271%" y="517" width="95.6729%" height="15" fill="rgb(249,219,21)" fg:x="5532" fg:w="122312"/><text x="4.5771%" y="527.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (122,312 samples, 95.67%)</title><rect x="4.3271%" y="501" width="95.6729%" height="15" fill="rgb(205,209,3)" fg:x="5532" fg:w="122312"/><text x="4.5771%" y="511.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>dkn-compute`std::sys::pal::unix::thread::Thread::new::thread_start (122,312 samples, 95.67%)</title><rect x="4.3271%" y="485" width="95.6729%" height="15" fill="rgb(243,44,1)" fg:x="5532" fg:w="122312"/><text x="4.5771%" y="495.50">dkn-compute`std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>dkn-compute`core::ops::function::FnOnce::call_once{{vtable.shim}} (122,312 samples, 95.67%)</title><rect x="4.3271%" y="469" width="95.6729%" height="15" fill="rgb(206,159,16)" fg:x="5532" fg:w="122312"/><text x="4.5771%" y="479.50">dkn-compute`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>dkn-compute`std::sys_common::backtrace::__rust_begin_short_backtrace (122,312 samples, 95.67%)</title><rect x="4.3271%" y="453" width="95.6729%" height="15" fill="rgb(244,77,30)" fg:x="5532" fg:w="122312"/><text x="4.5771%" y="463.50">dkn-compute`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>dkn-compute`tokio::runtime::blocking::pool::Inner::run (122,273 samples, 95.64%)</title><rect x="4.3577%" y="437" width="95.6423%" height="15" fill="rgb(218,69,12)" fg:x="5571" fg:w="122273"/><text x="4.6077%" y="447.50">dkn-compute`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (122,273 samples, 95.64%)</title><rect x="4.3577%" y="421" width="95.6423%" height="15" fill="rgb(212,87,7)" fg:x="5571" fg:w="122273"/><text x="4.6077%" y="431.50">dkn-compute`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (122,273 samples, 95.64%)</title><rect x="4.3577%" y="405" width="95.6423%" height="15" fill="rgb(245,114,25)" fg:x="5571" fg:w="122273"/><text x="4.6077%" y="415.50">dkn-compute`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>dkn-compute`tokio::runtime::scheduler::multi_thread::worker::run (122,272 samples, 95.64%)</title><rect x="4.3584%" y="389" width="95.6416%" height="15" fill="rgb(210,61,42)" fg:x="5572" fg:w="122272"/><text x="4.6084%" y="399.50">dkn-compute`tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>dkn-compute`tokio::runtime::context::runtime::enter_runtime (122,272 samples, 95.64%)</title><rect x="4.3584%" y="373" width="95.6416%" height="15" fill="rgb(211,52,33)" fg:x="5572" fg:w="122272"/><text x="4.6084%" y="383.50">dkn-compute`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>dkn-compute`tokio::runtime::context::set_scheduler (122,272 samples, 95.64%)</title><rect x="4.3584%" y="357" width="95.6416%" height="15" fill="rgb(234,58,33)" fg:x="5572" fg:w="122272"/><text x="4.6084%" y="367.50">dkn-compute`tokio::runtime::context::set_scheduler</text></g></svg></svg>